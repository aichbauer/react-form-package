(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{"./docz/17.dynamicFields3.mdx":function(e,n,t){"use strict";t.r(n);var a=t("./node_modules/react/index.js"),i=t.n(a),o=t("./node_modules/@mdx-js/tag/dist/index.js"),r=t("./src/index.js"),l=t("./node_modules/docz/dist/index.m.js");function s(e){return(s="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function d(e){return function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function c(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function p(e,n){return(p=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function u(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var f=function(e){function n(e){var t,a,i;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),a=this,(t=!(i=m(n).call(this,e))||"object"!==s(i)&&"function"!==typeof i?u(a):i).state={companies:[{id:"street-0"}]},t.addField=t.addField.bind(u(u(t))),t.removeField=t.removeField.bind(u(u(t))),t.calculateAvailableId=t.calculateAvailableId.bind(u(u(t))),t}var t,a,o;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&p(e,n)}(n,i.a.Component),t=n,(a=[{key:"calculateAvailableId",value:function(){var e=this.state.companies.map(function(e){return parseInt(e.id.split("-")[1],10)}),n=Math.max.apply(Math,d(e));return(n=n!==-1/0?n:0)+1}},{key:"addField",value:function(){var e=this.state.companies,n=this.calculateAvailableId();this.setState({companies:e.concat({id:"street-".concat(n)})})}},{key:"removeField",value:function(e){var n=this.state.companies;this.setState({companies:n.filter(function(n,t){return e!==t})})}},{key:"render",value:function(){var e=this,n=this.state.companies,t=this.calculateAvailableId();return i.a.createElement(r.d,{validate:!0},n.map(function(n,t){return i.a.createElement("div",null,i.a.createElement("div",null,i.a.createElement(r.b,{id:"".concat(n.id),placeholder:"Street name",type:"text",required:!0})),i.a.createElement("div",null,i.a.createElement(r.b,{id:"housenumber-".concat(n.id.split("-")[1]),placeholder:"House number",type:"number",required:!0})),i.a.createElement(r.a,{id:"removeField",rfpRole:"removeField",type:"button",fieldId:["".concat(n.id),"housenumber-".concat(n.id.split("-")[1])],onClick:function(){return e.removeField(t)}},"Remove Company"))}),i.a.createElement("div",null,i.a.createElement(r.a,{id:"addField",rfpRole:"addField",type:"button",field:[{id:"street-".concat(t),type:"text",required:!0},{id:"housenumber-".concat(t),type:"number",required:!0}],onClick:function(){return e.addField()}},"Add Company Field")),i.a.createElement("div",null,i.a.createElement(r.a,{id:"submit",type:"submit",onClick:function(e){alert(JSON.stringify(e,null,2)),alert("open the console to see the whole state..."),console.log(e)}},"submit")))}}])&&c(t.prototype,a),o&&c(t,o),n}();function h(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}f.__docgenInfo={description:"",methods:[{name:"calculateAvailableId",docblock:null,modifiers:[],params:[],returns:null},{name:"addField",docblock:null,modifiers:[],params:[],returns:null},{name:"removeField",docblock:null,modifiers:[],params:[{name:"idx",type:null}],returns:null}],displayName:"MultipleDynamicFields"};n.default=function(e){var n=e.components,t=h(e,["components"]);return i.a.createElement(o.MDXTag,{name:"wrapper",components:n},i.a.createElement(o.MDXTag,{name:"h1",components:n,props:{id:"dynamic-fields"}},"Dynamic Fields"),i.a.createElement(o.MDXTag,{name:"p",components:n},"When you have a part of your form that consists of multiple fields that needs to be dynamic, e.g. ",i.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"streetname")," and ",i.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"housenumber"),". >ou can add multiple fields to the state of the ",i.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<Form />")," component by simle passing an array of objects to the ",i.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"field")," property instead of a single object. The same way you can remove multiple fields from state of the ",i.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<Form />")," component, by passing an array of strings to the ",i.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"fieldId")," property instead of a single string."),i.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"add-multiple-dynamic-fields-to-the-state"}},"Add multiple dynamic fields to the state"),i.a.createElement(o.MDXTag,{name:"p",components:n},"First off, import your components."),i.a.createElement(o.MDXTag,{name:"pre",components:n},i.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"import React from 'react';\nimport {\n  Form,\n  Field,\n  Button,\n} from 'react-form-package';\n")),i.a.createElement(o.MDXTag,{name:"p",components:n},"Now create your component:"),i.a.createElement(o.MDXTag,{name:"pre",components:n},i.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},'class MultipleDynamicFields extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      companies: [\n        {\n          id: \'street-0\',\n        },\n      ],\n    };\n\n    this.addField = this.addField.bind(this);\n    this.removeField = this.removeField.bind(this);\n    this.calculateAvailableId = this.calculateAvailableId.bind(this);\n  }\n\n  calculateAvailableId() {\n    const {\n      companies,\n    } = this.state;\n\n    const arr = companies.map((item) => parseInt(item.id.split(\'-\')[1], 10));\n\n    let currentHighestId = Math.max(...arr);\n    currentHighestId = currentHighestId !== -Infinity ? currentHighestId : 0;\n\n    const highestAvailableId = currentHighestId + 1;\n\n    return highestAvailableId;\n  }\n\n  addField() {\n    const {\n      companies,\n    } = this.state;\n\n    const highestAvailableId = this.calculateAvailableId();\n\n    this.setState({\n      companies: companies.concat({ id: `street-${highestAvailableId}` }),\n    });\n  }\n\n  removeField(idx) {\n    const {\n      companies,\n    } = this.state;\n\n    this.setState({\n      companies: companies.filter((_, index) => idx !== index),\n    });\n  }\n\n  render() {\n    const {\n      companies,\n    } = this.state;\n\n    const highestAvailableId = this.calculateAvailableId();\n\n    return (\n      <Form\n        validate\n      >\n        {companies.map((street, idx) => (\n          <div>\n            <div>\n              <Field\n                id={`${street.id}`}\n                placeholder="Street name"\n                type="text"\n                required\n              />\n            </div>\n            <div>\n              <Field\n                id={`housenumber-${street.id.split(\'-\')[1]}`}\n                placeholder="House number"\n                type="number"\n                required\n              />\n            </div>\n            <Button\n              id="removeField"\n              rfpRole="removeField"\n              type="button"\n              // pass multiple fieldIds \n              // in an array to the \n              // fieldId\n              fieldId={[\n                `${street.id}`,\n                `housenumber-${street.id.split(\'-\')[1]}`,\n              ]}\n              onClick={() => this.removeField(idx)}\n            >\n              Remove Company\n            </Button>\n          </div>\n        ))}\n        <div>\n          <Button\n            id="addField"\n            rfpRole="addField"\n            type="button"\n            // pass multiple field objects \n            // in an array to the \n            // field property\n            field={[\n              {\n                id: `street-${highestAvailableId}`,\n                type: \'text\',\n                required: true,\n              },\n              {\n                id: `housenumber-${highestAvailableId}`,\n                type: \'number\',\n                required: true,\n              },\n            ]}\n            onClick={() => this.addField()}\n          >\n            Add Company Field\n          </Button>\n        </div>\n        <div>\n          <Button\n            id="submit"\n            type="submit"\n            onClick={(state) => {\n              alert(JSON.stringify(state, null, 2));\n              alert(\'open the console to see the whole state...\');\n              console.log(state);\n            }}\n          >\n            submit\n          </Button>\n        </div>\n      </Form>\n    );\n  }\n}\n\nexport { MultipleDynamicFields };\n')),i.a.createElement(o.MDXTag,{name:"p",components:n},"Now lets render this component and see how you can add and remove multiple fields."),i.a.createElement(l.Playground,{__position:0,__code:"<MultipleDynamicFields />",__scope:{props:t,Form:r.d,Button:r.a,Field:r.b,Select:r.f,RadioGroup:r.e,MultipleDynamicFields:f}},i.a.createElement(f,null)))}}}]);