(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{"./docz/onFocusOnChangeOnBlur.mdx":function(e,n,a){"use strict";a.r(n);var t=a("./node_modules/react/index.js"),o=a.n(t),m=a("./node_modules/@mdx-js/tag/dist/index.js"),r=a("./src/index.js"),c=a("./node_modules/docz/dist/index.m.js");function l(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},m=Object.keys(e);for(t=0;t<m.length;t++)a=m[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(t=0;t<m.length;t++)a=m[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}n.default=function(e){var n=e.components,a=l(e,["components"]);return o.a.createElement(m.MDXTag,{name:"wrapper",components:n},o.a.createElement(m.MDXTag,{name:"h1",components:n,props:{id:"onfocus-onchange-onblur"}},"onFocus, onChange, onBlur"),o.a.createElement(m.MDXTag,{name:"blockquote",components:n},o.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"blockquote"},"get access to the state everytime the user interacts with your form")),o.a.createElement(m.MDXTag,{name:"p",components:n},"Sometimes, access to the forms state is needed even before the user submits the form. This can be if you want to store the forms state on the server on every change (e.g. every time the user changes a input or everytime the user blurs an input) or you want to check if the users input is already taken (e.g. a user might not be allowed to use a email or a username that is already taken and you want to give the user a fast respond before the user even submits the form)."),o.a.createElement(m.MDXTag,{name:"p",components:n},"You are not able to modify the state on this callbacks since ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"react-form-package")," takes care of the state management, but you can use the state to communicate with a server or change the UI corresponding to the current state."),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"onfocus"}},"onFocus"),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"import {\n  Form,\n  Field,\n} from 'react-form-package';\n")),o.a.createElement(m.MDXTag,{name:"p",components:n},"Render a ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<Form />")," with an email ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<Field />")," component and a ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"onFocus")," property."),o.a.createElement(m.MDXTag,{name:"blockquote",components:n},o.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"blockquote"},"Take a look at the console.")),o.a.createElement(c.Playground,{__position:0,__code:'<Form>\n  {/* do something with the state onFocus */}\n  <Field\n    id="email"\n    type="email"\n    value="test@example.com"\n    onFocus={state => console.log(state)}\n  />\n</Form>',__scope:{props:a,Form:r.d,Field:r.b}},o.a.createElement(r.d,null,o.a.createElement(r.b,{id:"email",type:"email",value:"test@example.com",onFocus:function(e){return console.log(e)}}))),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"onchange"}},"onChange"),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"import {\n  Form,\n  Field,\n} from 'react-form-package';\n")),o.a.createElement(m.MDXTag,{name:"p",components:n},"Render a ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<Form />")," with an email ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<Field />")," component and a ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"onChange")," property."),o.a.createElement(m.MDXTag,{name:"blockquote",components:n},o.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"blockquote"},"Take a look at the console.")),o.a.createElement(c.Playground,{__position:1,__code:'<Form>\n  {/* do something with the state onChange */}\n  <Field\n    id="email"\n    type="email"\n    value="test@example.com"\n    onChange={state => console.log(state)}\n  />\n</Form>',__scope:{props:a,Form:r.d,Field:r.b}},o.a.createElement(r.d,null,o.a.createElement(r.b,{id:"email",type:"email",value:"test@example.com",onChange:function(e){return console.log(e)}}))),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"onblur"}},"onBlur"),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"import {\n  Form,\n  Field,\n} from 'react-form-package';\n")),o.a.createElement(m.MDXTag,{name:"p",components:n},"Render a ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<Form />")," with an email ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<Field />")," component and a ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"onBlur")," property."),o.a.createElement(m.MDXTag,{name:"blockquote",components:n},o.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"blockquote"},"Take a look at the console.")),o.a.createElement(c.Playground,{__position:2,__code:'<Form>\n  {/* do something with the state onBlur */}\n  <Field\n    id="email"\n    type="email"\n    value="test@example.com"\n    onBlur={state => console.log(state)}\n  />\n</Form>',__scope:{props:a,Form:r.d,Field:r.b}},o.a.createElement(r.d,null,o.a.createElement(r.b,{id:"email",type:"email",value:"test@example.com",onBlur:function(e){return console.log(e)}}))))}}}]);