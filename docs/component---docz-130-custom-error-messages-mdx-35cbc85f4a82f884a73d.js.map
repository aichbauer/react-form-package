{"version":3,"sources":["webpack:///../docz/130.customErrorMessages.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Form","Button","Field","Playground","id","type","required","errorMessage","onClick","state","alert","JSON","stringify","console","log","isMDXComponent"],"mappings":"0gBAQO,IAAMA,EAAe,Q,kNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,yBADR,yBAGA,gFAA+D,0BAAYC,WAAW,KAAvB,gBAA/D,oBAA4I,0BAAYA,WAAW,KAAvB,aAA5I,KAAuM,0BAAYA,WAAW,KAAvB,aAAvM,QAAqQ,0BAAYA,WAAW,KAAvB,iBAArQ,eACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,sdAAieC,QAAS,CAC3gBL,QACAH,kBACAS,SACAC,WACAC,UACAC,gBACCR,QAAQ,cACb,YAAC,IAAD,CAAMA,QAAQ,QACZ,uBACE,gCACA,YAAC,IAAD,CAAOS,GAAG,QAAQC,KAAK,QAAQC,UAAQ,EAACC,aAAa,kCAAkCZ,QAAQ,WAEjG,uBACE,YAAC,IAAD,CAAQU,KAAK,SAASD,GAAG,SAASI,QAAS,SAAAC,GACrCC,MAAMC,KAAKC,UAAUH,EAAO,KAAM,IAClCC,MAAM,8CACNG,QAAQC,IAAIL,IACXd,QAAQ,UAJf,c,yMAcNH,EAAWuB,gBAAiB","file":"component---docz-130-custom-error-messages-mdx-35cbc85f4a82f884a73d.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukas/Sites/git/own-packages/react-form-package/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Form, Button, Field } from '../src';\nimport { Playground } from 'docz';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"custom-error-messages\"\n    }}>{`Custom Error Messages`}</h1>\n    <p>{`If you want to display your own error messages, use the `}<inlineCode parentName=\"p\">{`errorMessage`}</inlineCode>{` property on the `}<inlineCode parentName=\"p\">{`<Field />`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<Select/>`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`<RadioGroup/>`}</inlineCode>{` component.`}</p>\n    <Playground __position={0} __code={'<Form>\\n  <div>\\n    <div>Email</div>\\n    <Field\\n      id=\\\"email\\\"\\n      type=\\\"email\\\"\\n      required\\n      errorMessage=\\\"This is a custom error message!\\\"\\n    />\\n  </div>\\n  <div>\\n    <Button\\n      type=\\\"submit\\\"\\n      id=\\\"submit\\\"\\n      onClick={state => {\\n        alert(JSON.stringify(state, null, 2))\\n        alert(\\'open the console to see the whole state...\\')\\n        console.log(state)\\n      }}\\n    >\\n      Submit\\n    </Button>\\n  </div>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Form,\n      Button,\n      Field,\n      Playground\n    }} mdxType=\"Playground\">\n  <Form mdxType=\"Form\">\n    <div>\n      <div>Email</div>\n      <Field id=\"email\" type=\"email\" required errorMessage=\"This is a custom error message!\" mdxType=\"Field\" />\n    </div>\n    <div>\n      <Button type=\"submit\" id=\"submit\" onClick={state => {\n            alert(JSON.stringify(state, null, 2));\n            alert('open the console to see the whole state...');\n            console.log(state);\n          }} mdxType=\"Button\">\n        Submit\n      </Button>\n    </div>\n  </Form>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}