(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{CiDR:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return u})),n.d(t,"default",(function(){return y}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("GkPX");var a=n("mXGw"),o=n.n(a),i=n("/FXl"),c=n("TjRS"),r=n("oXiK"),d=n("ZFoC"),l=n("7E8i"),b=n("dIcL"),p=n("olgJ");n("aD51");function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var u={};void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docz/160.dynamicFIelds.mdx"}});var m={_frontmatter:u},O=c.a;function y(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(i.b)(O,s({},m,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"dynamic-fields"},"Dynamic Fields"),Object(i.b)("p",null,"Sometimes you need to create your ",Object(i.b)("inlineCode",{parentName:"p"},"Form")," out of dynamic data, e.g. from data you received from a server. This is mostly the case when using ",Object(i.b)("inlineCode",{parentName:"p"},"checkboxes"),", ",Object(i.b)("inlineCode",{parentName:"p"},"radio groups"),", or ",Object(i.b)("inlineCode",{parentName:"p"},"select fields"),"."),Object(i.b)("p",null,"For example: you could receive the data from the server and than use ",Object(i.b)("inlineCode",{parentName:"p"},"setState")," to set the data for your ",Object(i.b)("inlineCode",{parentName:"p"},"checkboxes"),", ",Object(i.b)("inlineCode",{parentName:"p"},"radio groups"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"select fields")," used in your ",Object(i.b)("inlineCode",{parentName:"p"},"<Form />")," component."),Object(i.b)("pre",null,Object(i.b)("code",s({parentName:"pre"},{className:"language-js"}),"async componentDidMount() {\n  const response = await getDataFromServer();\n\n  this.setState({\n    checkboxData: response.data.checkboxData,\n    selectData: response.data.selectData,\n    radioData: response.data.radioData,\n  });\n}\n")),Object(i.b)("p",null,"Than in your render function you would return something like:"),Object(i.b)(d.c,{__position:0,__code:'<Form>\n  <div>\n    {checkboxData.map(checkbox => (\n      <React.Fragment>\n        <div>{checkbox.name}</div>\n        <Field id={checkbox.id} type="checkbox" />\n      </React.Fragment>\n    ))}\n  </div>\n  <div>\n    <Select type="select" id="select">\n      <option disabled value="">\n        --- Select an option ---\n      </option>\n      {selectData.map(selectOption => (\n        <option value={selectOption.value}>{selectOption.name}</option>\n      ))}\n    </Select>\n  </div>\n  <div>\n    <RadioGroup type="radio" id="radioID">\n      {radioData.map(radioOption => (\n        <div>\n          <div>{radioOption.name}</div>\n          <input type="radio" name="radioID" id={radioOption.id} />\n        </div>\n      ))}\n    </RadioGroup>\n  </div>\n  <div>\n    <Button\n      type="submit"\n      id="submit"\n      onClick={state => {\n        alert(JSON.stringify(state, null, 2))\n        alert(\'open the console to see the whole state...\')\n        console.log(state)\n      }}\n    >\n      Submit\n    </Button>\n  </div>\n</Form>',__scope:{props:n,DefaultLayout:c.a,Form:r.d,Button:r.a,Field:r.b,Select:r.f,RadioGroup:r.e,Playground:d.c,checkboxData:l.a,selectData:b.a,radioData:p.a},mdxType:"Playground"},Object(i.b)(r.d,{mdxType:"Form"},Object(i.b)("div",null,l.a.map((function(e){return Object(i.b)(o.a.Fragment,null,Object(i.b)("div",null,e.name),Object(i.b)(r.b,{id:e.id,type:"checkbox",mdxType:"Field"}))}))),Object(i.b)("div",null,Object(i.b)(r.f,{type:"select",id:"select",mdxType:"Select"},Object(i.b)("option",{disabled:!0,value:""},"--- Select an option ---"),b.a.map((function(e){return Object(i.b)("option",{value:e.value},e.name)})))),Object(i.b)("div",null,Object(i.b)(r.e,{type:"radio",id:"radioID",mdxType:"RadioGroup"},p.a.map((function(e){return Object(i.b)("div",null,Object(i.b)("div",null,e.name),Object(i.b)("input",{type:"radio",name:"radioID",id:e.id}))})))),Object(i.b)("div",null,Object(i.b)(r.a,{type:"submit",id:"submit",onClick:function(e){alert(JSON.stringify(e,null,2)),alert("open the console to see the whole state..."),console.log(e)},mdxType:"Button"},"Submit")))))}y&&y===Object(y)&&Object.isExtensible(y)&&!y.hasOwnProperty("__filemeta")&&Object.defineProperty(y,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docz/160.dynamicFIelds.mdx"}}),y.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docz-160-dynamic-f-ields-mdx-9f06364d6afcc3e0ab9f.js.map