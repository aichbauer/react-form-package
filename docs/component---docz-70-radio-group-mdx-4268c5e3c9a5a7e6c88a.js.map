{"version":3,"sources":["webpack:///../docz/70.radioGroup.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Form","RadioGroup","Button","Playground","type","id","name","onClick","state","alert","JSON","stringify","console","log","isMDXComponent"],"mappings":"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","file":"component---docz-70-radio-group-mdx-4268c5e3c9a5a7e6c88a.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukas/Sites/git/own-packages/react-form-package/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Form, RadioGroup, Button } from '../src';\nimport { Playground } from 'docz';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"radiogroup\"\n    }}>{`RadioGroup`}</h1>\n    <p>{`This component has to be a child within the `}<inlineCode parentName=\"p\">{`<Form />`}</inlineCode>{` component. This component must have `}<inlineCode parentName=\"p\">{`<input />`}</inlineCode>{` components with the type=\"radio\" as children. These children components must have a name prop which has to match the parents id. The id of the children will be the value of the `}<inlineCode parentName=\"p\">{`<RadioGroup />`}</inlineCode>{` component when clicked.`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {\n  Form,\n  RadioGroup,\n} from 'react-form-package';\n`}</code></pre>\n    <p>{`Render a `}<inlineCode parentName=\"p\">{`<Form />`}</inlineCode>{` with a `}<inlineCode parentName=\"p\">{`<RadioGroup />`}</inlineCode>{` and a `}<inlineCode parentName=\"p\">{`<Button />`}</inlineCode>{` component.`}</p>\n    <Playground __position={0} __code={'<Form>\\n  <div>\\n    <div>Choose an option</div>\\n    <RadioGroup type=\\\"radio\\\" id=\\\"option\\\">\\n      <div>\\n        <div>option 1</div>\\n        <input type=\\\"radio\\\" name=\\\"option\\\" id=\\\"option1\\\" />\\n      </div>\\n      <div>\\n        <div>option 2</div>\\n        <input type=\\\"radio\\\" name=\\\"option\\\" id=\\\"option2\\\" />\\n      </div>\\n      <div>\\n        <div>option 3</div>\\n        <input type=\\\"radio\\\" name=\\\"option\\\" id=\\\"option3\\\" />\\n      </div>\\n    </RadioGroup>\\n    <div>\\n      <Button\\n        id=\\\"submit\\\"\\n        type=\\\"submit\\\"\\n        onClick={state => {\\n          alert(JSON.stringify(state, null, 2))\\n          alert(\\'open the console to see the whole state...\\')\\n          console.log(state)\\n        }}\\n      >\\n        Submit\\n      </Button>\\n    </div>\\n  </div>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Form,\n      RadioGroup,\n      Button,\n      Playground\n    }} mdxType=\"Playground\">\n  <Form mdxType=\"Form\">\n    <div>\n      <div>\n        Choose an option\n      </div>\n      <RadioGroup type=\"radio\" id=\"option\" mdxType=\"RadioGroup\">\n        <div>\n          <div>\n            option 1\n          </div>\n          <input type=\"radio\" name=\"option\" id=\"option1\" />\n        </div>\n        <div>\n          <div>\n            option 2\n          </div>\n          <input type=\"radio\" name=\"option\" id=\"option2\" />\n        </div>\n        <div>\n          <div>\n            option 3\n          </div>\n          <input type=\"radio\" name=\"option\" id=\"option3\" />\n        </div>\n      </RadioGroup>\n      <div>\n        <Button id=\"submit\" type=\"submit\" onClick={state => {\n              alert(JSON.stringify(state, null, 2));\n              alert('open the console to see the whole state...');\n              console.log(state);\n            }} mdxType=\"Button\">Submit</Button>\n      </div>\n    </div>\n  </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property `}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`id `}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`radio`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Bool`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`preOnChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Func `}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false `}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`manipulate the state before its validated (see `}<a parentName=\"td\" {...{\n              \"href\": \"/react-form-package/state-manipulation\"\n            }}>{`State Manipulation`}</a>{`)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`errorMessage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`define your own custom error message for the input`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onFocus`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Func`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`get access to the state of the form when the user focus on the input`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Func`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`get access to the state of the form when the user changes the input`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onBlur`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Func`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`get access to the state of the form when the user blurs the input`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`bintTo`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String, Array`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{` `}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{` only needed for `}<a parentName=\"td\" {...{\n              \"href\": \"/react-form-package/bind-input-fields\"\n            }}>{`binding input fields`}</a>{`. The id/ids of the input/inputs you want to manipulate`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`bintToAllways`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Bool`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{` `}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{` only needed for `}<a parentName=\"td\" {...{\n              \"href\": \"/react-form-package/bind-input-fields-2\"\n            }}>{`binding input fields`}</a>{`. Only needed if you want that the bindToCallback is triggered even the bound input field was already touched (blurred)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`bindToCallback`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Func`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`only needed for `}<a parentName=\"td\" {...{\n              \"href\": \"/react-form-package/bind-input-fields\"\n            }}>{`binding input fields`}</a>{`. The callback to set the target's (`}<inlineCode parentName=\"td\">{`bindTo`}</inlineCode>{`) input value, which gets called `}<inlineCode parentName=\"td\">{`onChange`}</inlineCode>{` (return a single value or an array of values)`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}