{"version":3,"sources":["webpack:///../docz/30.simpleForm.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Form","Field","Select","RadioGroup","Button","Playground","validate","type","id","rows","cols","disabled","value","name","onClick","state","alert","JSON","stringify","console","log","isMDXComponent"],"mappings":"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","file":"component---docz-30-simple-form-mdx-d143e5a89cbd00b0cdcc.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukas/Sites/git/own-packages/react-form-package/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Form, Field, Select, RadioGroup, Button } from '../src';\nimport { Playground } from 'docz';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"simple-form\"\n    }}>{`Simple Form`}</h1>\n    <p>{`There are five (six) different components within this package. The `}<inlineCode parentName=\"p\">{`<FieldWrapper />`}</inlineCode>{` component is only here for edge cases, e.g. working with third party components. So for this simple example we stick to these five:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {\n  Button,\n  Field,\n  Form,\n  RadioGroup,\n  Select,\n} from 'react-form-package';\n`}</code></pre>\n    <p>{`If you are familiar with writing HTML forms than you are all set up. There are no complex data props or functions that you have to call before you can set up a form and validate its input like in most other libraries. Why should you care about writing the validations for your form yourself? An email, a date, a url, and so on, will always have the same structure. `}<inlineCode parentName=\"p\">{`react-form-package`}</inlineCode>{` will not only help you by your forms state management, it also will help you validating your forms correctly.`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`Every `}<inlineCode parentName=\"em\">{`<Button>`}</inlineCode>{`, `}<inlineCode parentName=\"em\">{`<Field>`}</inlineCode>{`, `}<inlineCode parentName=\"em\">{`<RadioGroup>`}</inlineCode>{`, and `}<inlineCode parentName=\"em\">{`<Select>`}</inlineCode>{` component must have an `}<strong parentName=\"em\">{`id property`}</strong>{` and a `}<strong parentName=\"em\">{`type property`}</strong>{` `}</em></li>\n      <li parentName=\"ul\"><em parentName=\"li\"><inlineCode parentName=\"em\">{`<Select>`}</inlineCode>{` components have `}<inlineCode parentName=\"em\">{`<option>`}</inlineCode>{` childs which must have a `}<strong parentName=\"em\">{`value property`}</strong>{` `}</em></li>\n      <li parentName=\"ul\"><em parentName=\"li\"><inlineCode parentName=\"em\">{`<RadioGroup>`}</inlineCode>{` components have `}<inlineCode parentName=\"em\">{`<input>`}</inlineCode>{` childs which must have an `}<strong parentName=\"em\">{`id property`}</strong>{`, `}<strong parentName=\"em\">{`type property`}</strong>{`, and `}<strong parentName=\"em\">{`name property`}</strong>{` `}</em></li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`If you want the form to valitate inputs and show error messages simply add a `}<strong parentName=\"em\">{`validate prop`}</strong>{` on the `}<inlineCode parentName=\"em\">{`<Form>`}</inlineCode>{` component `}</em></li>\n    </ul>\n    <p>{`In this example we use all components and types this library supports:`}</p>\n    <Playground __position={0} __code={'<Form validate>\\n  <div>\\n    <div>checkbox</div>\\n    <Field type=\\\"checkbox\\\" id=\\\"checkbox\\\" />\\n  </div>\\n  <div>\\n    <div>textarea</div>\\n    <Field rows=\\\"5\\\" cols=\\\"30\\\" type=\\\"textarea\\\" id=\\\"textarea\\\" />\\n  </div>\\n  <div>\\n    <div>date</div>\\n    <Field type=\\\"date\\\" id=\\\"date\\\" />\\n  </div>\\n  <div>\\n    <div>datetime-local</div>\\n    <Field type=\\\"datetime-local\\\" id=\\\"datetime-local\\\" />\\n  </div>\\n  <div>\\n    <div>email</div>\\n    <Field type=\\\"email\\\" id=\\\"email\\\" />\\n  </div>\\n  <div>\\n    <div>number</div>\\n    <Field type=\\\"number\\\" id=\\\"number\\\" />\\n  </div>\\n  <div>\\n    <div>tel</div>\\n    <Field type=\\\"tel\\\" id=\\\"tel\\\" />\\n  </div>\\n  <div>\\n    <div>text</div>\\n    <Field type=\\\"text\\\" id=\\\"text\\\" />\\n  </div>\\n  <div>\\n    <div>password</div>\\n    <Field type=\\\"password\\\" id=\\\"password\\\" />\\n  </div>\\n  <div>\\n    <div>time</div>\\n    <Field type=\\\"time\\\" id=\\\"time\\\" />\\n  </div>\\n  <div>\\n    <div>url</div>\\n    <Field type=\\\"url\\\" id=\\\"url\\\" />\\n  </div>\\n  <div>\\n    <div>select</div>\\n    <Select id=\\\"select\\\" type=\\\"select\\\">\\n      <option disabled value=\\\"\\\">\\n        --- Choose an option ---\\n      </option>\\n      <option value=\\\"option1\\\">option 1</option>\\n      <option value=\\\"option2\\\">option 2</option>\\n      <option value=\\\"option3\\\">option 3</option>\\n    </Select>\\n  </div>\\n  <div>\\n    <div>radio</div>\\n    <RadioGroup type=\\\"radio\\\" id=\\\"radio\\\">\\n      <input type=\\\"radio\\\" name=\\\"radio\\\" id=\\\"radio1\\\" />\\n      radio 1\\n      <input type=\\\"radio\\\" name=\\\"radio\\\" id=\\\"radio2\\\" />\\n      radio 2\\n      <input type=\\\"radio\\\" name=\\\"radio\\\" id=\\\"radio3\\\" />\\n      radio 3\\n    </RadioGroup>\\n  </div>\\n  <div>\\n    <Button\\n      id=\\\"submit\\\"\\n      type=\\\"submit\\\"\\n      onClick={state => {\\n        alert(JSON.stringify(state, null, 2))\\n        alert(\\'open the console to see the whole state...\\')\\n        console.log(state)\\n      }}\\n    >\\n      submit\\n    </Button>\\n  </div>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Form,\n      Field,\n      Select,\n      RadioGroup,\n      Button,\n      Playground\n    }} mdxType=\"Playground\">\n  <Form validate mdxType=\"Form\">\n      <div>\n        <div>checkbox</div>\n        <Field type=\"checkbox\" id=\"checkbox\" mdxType=\"Field\" />\n      </div>\n      <div>\n        <div>textarea</div>\n        <Field rows=\"5\" cols=\"30\" type=\"textarea\" id=\"textarea\" mdxType=\"Field\" />\n      </div>\n      <div>\n        <div>date</div>\n        <Field type=\"date\" id=\"date\" mdxType=\"Field\" />\n      </div>\n      <div>\n        <div>datetime-local</div>\n        <Field type=\"datetime-local\" id=\"datetime-local\" mdxType=\"Field\" />\n      </div>\n      <div>\n        <div>email</div>\n        <Field type=\"email\" id=\"email\" mdxType=\"Field\" />\n      </div>\n      <div>\n        <div>number</div>\n        <Field type=\"number\" id=\"number\" mdxType=\"Field\" />\n      </div>\n      <div>\n        <div>tel</div>\n        <Field type=\"tel\" id=\"tel\" mdxType=\"Field\" />\n      </div>\n      <div>\n        <div>text</div>\n        <Field type=\"text\" id=\"text\" mdxType=\"Field\" />\n      </div>\n      <div>\n        <div>password</div>\n        <Field type=\"password\" id=\"password\" mdxType=\"Field\" />\n      </div>\n      <div>\n        <div>time</div>\n        <Field type=\"time\" id=\"time\" mdxType=\"Field\" />\n      </div>\n      <div>\n        <div>url</div>\n        <Field type=\"url\" id=\"url\" mdxType=\"Field\" />\n      </div>\n      <div>\n        <div>select</div>\n        <Select id=\"select\" type=\"select\" mdxType=\"Select\">\n          <option disabled value=\"\">--- Choose an option ---</option>\n          <option value=\"option1\">option 1</option>\n          <option value=\"option2\">option 2</option>\n          <option value=\"option3\">option 3</option>\n        </Select>\n      </div>\n      <div>\n        <div>radio</div>\n        <RadioGroup type=\"radio\" id=\"radio\" mdxType=\"RadioGroup\">\n          <input type=\"radio\" name=\"radio\" id=\"radio1\" />\n          radio 1\n          <input type=\"radio\" name=\"radio\" id=\"radio2\" />\n          radio 2\n          <input type=\"radio\" name=\"radio\" id=\"radio3\" />\n          radio 3\n        </RadioGroup>\n      </div>\n      <div>\n        <Button id=\"submit\" type=\"submit\" onClick={state => {\n            alert(JSON.stringify(state, null, 2));\n            alert('open the console to see the whole state...');\n            console.log(state);\n          }} mdxType=\"Button\">submit</Button>\n      </div>\n    </Form>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}