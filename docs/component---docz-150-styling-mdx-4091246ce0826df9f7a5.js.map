{"version":3,"sources":["webpack:///../docz/150.styling.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Form","Field","Button","Select","RadioGroup","Label","FormGroup","FormControl","FormCheck","FormCheckInput","Column","Btn","MyButton","MyInput","MyClassNameButton","MyClassNameInput","validate","input","select","button","primary","mt","mb","checkbox","radio","error","style","color","row","nomb","sm","id","type","placeholder","disabled","value","ml","required","name","onClick","state","alert","JSON","stringify","console","log","isMDXComponent"],"mappings":"2mBAgBO,IAAMA,EAAe,Q,sMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,WADR,WAGA,oIACA,iBAAQ,CACN,GAAM,aADR,aAGA,8BACE,iBAAGC,WAAW,cAAd,mDAA+E,0BAAYA,WAAW,KAAvB,qBAA/E,uBAEF,wJAAuI,mBAAGA,WAAW,KAAQ,CACzJ,KAAQ,6DAD2H,+BAAvI,KAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,2PAmBL,2GAA0F,0BAAYA,WAAW,KAAvB,YAA1F,eACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,86FAAy/FC,QAAS,CACniGL,QACAH,kBACAS,eACAC,SACAC,UACAC,WACAC,WACAC,eACAC,cACAC,sBACAC,0BACAC,sBACAC,gCACAC,gBACAC,aACAC,aACAC,YACAC,sBACAC,sBACCrB,QAAQ,cACb,YAAC,IAAD,CAAMsB,UAAQ,EAACC,MAAO,YAAC,cAAD,CAAavB,QAAQ,gBAAkBwB,OAAQ,YAAC,cAAD,CAAaA,QAAM,EAACxB,QAAQ,gBAAkByB,OAAQ,YAAC,SAAD,CAAKC,SAAO,EAACC,GAAG,MAAMC,GAAG,MAAM5B,QAAQ,QAAU6B,SAAU,YAAC,iBAAD,CAAgB7B,QAAQ,mBAAqB8B,MAAO,YAAC,iBAAD,CAAgB9B,QAAQ,mBAAqB+B,MAAO,mBAAKC,MAAO,CACpSC,MAAO,SACFjC,QAAQ,QACb,YAAC,YAAD,CAAWkC,KAAG,EAACC,MAAI,EAACnC,QAAQ,aAElC,YAAC,SAAD,CAAQoC,GAAI,EAAGpC,QAAQ,UAErB,YAAC,YAAD,CAAWA,QAAQ,aAEjB,YAAC,QAAD,CAAOA,QAAQ,SAAf,SAEA,YAAC,IAAD,CAAOqC,GAAG,QAAQC,KAAK,QAAQC,YAAY,QAAQvC,QAAQ,YAM/D,YAAC,SAAD,CAAQoC,GAAI,EAAGpC,QAAQ,UAErB,YAAC,YAAD,CAAWA,QAAQ,aAEjB,YAAC,QAAD,CAAOA,QAAQ,SAAf,YAEA,YAAC,IAAD,CAAOqC,GAAG,WAAWC,KAAK,WAAWC,YAAY,WAAWvC,QAAQ,aAQlE,YAAC,YAAD,CAAWkC,KAAG,EAACC,MAAI,EAACnC,QAAQ,aAElC,YAAC,SAAD,CAAQoC,GAAI,GAAIpC,QAAQ,UAEtB,YAAC,YAAD,CAAWA,QAAQ,aAEjB,YAAC,QAAD,CAAOA,QAAQ,SAAf,WAEA,YAAC,IAAD,CAAOqC,GAAG,UAAUC,KAAK,OAAOC,YAAY,eAAevC,QAAQ,aAQjE,YAAC,YAAD,CAAWkC,KAAG,EAAClC,QAAQ,aAE7B,YAAC,SAAD,CAAQoC,GAAI,GAAIpC,QAAQ,UAEtB,YAAC,YAAD,CAAWA,QAAQ,aAEjB,YAAC,QAAD,CAAOA,QAAQ,SAAf,aAEA,YAAC,IAAD,CAAOqC,GAAG,WAAWC,KAAK,OAAOC,YAAY,8BAA8BvC,QAAQ,aAQjF,YAAC,YAAD,CAAWkC,KAAG,EAACC,MAAI,EAACnC,QAAQ,aAElC,YAAC,SAAD,CAAQoC,GAAI,EAAGpC,QAAQ,UAErB,YAAC,YAAD,CAAWA,QAAQ,aAEjB,YAAC,QAAD,CAAOA,QAAQ,SAAf,QAEA,YAAC,IAAD,CAAOqC,GAAG,OAAOC,KAAK,OAAOtC,QAAQ,YAMzC,YAAC,SAAD,CAAQoC,GAAI,EAAGpC,QAAQ,UAErB,YAAC,YAAD,CAAWA,QAAQ,aAEjB,YAAC,QAAD,CAAOA,QAAQ,SAAf,SAEA,YAAC,IAAD,CAAQqC,GAAG,QAAQC,KAAK,SAAStC,QAAQ,UACvC,sBAAQwC,UAAQ,EAACC,MAAM,IAAvB,0BACA,sBAAQA,MAAM,WAAd,WACA,sBAAQA,MAAM,WAAd,WACA,sBAAQA,MAAM,SAAd,YAON,YAAC,SAAD,CAAQL,GAAI,EAAGpC,QAAQ,UAErB,YAAC,YAAD,CAAWA,QAAQ,aAEjB,YAAC,QAAD,CAAOA,QAAQ,SAAf,OAEA,YAAC,IAAD,CAAOqC,GAAG,MAAMC,KAAK,OAAOtC,QAAQ,aAQlC,YAAC,YAAD,CAAWkC,KAAG,EAAClC,QAAQ,aAE7B,YAAC,SAAD,CAAQoC,GAAI,GAAIpC,QAAQ,UAEtB,YAAC,YAAD,CAAW0C,GAAG,OAAO1C,QAAQ,aAE3B,YAAC,IAAD,CAAOqC,GAAG,WAAWC,KAAK,WAAWtC,QAAQ,UAE7C,YAAC,QAAD,CAAOA,QAAQ,SAAf,kCAQE,YAAC,YAAD,CAAWkC,KAAG,EAAClC,QAAQ,aAE7B,YAAC,SAAD,CAAQoC,GAAI,GAAIpC,QAAQ,UAEtB,YAAC,QAAD,CAAOA,QAAQ,SAAf,oBAEA,YAAC,IAAD,CAAYsC,KAAK,QAAQD,GAAG,QAAQM,UAAQ,EAAC3C,QAAQ,cAEnD,YAAC,YAAD,CAAWA,QAAQ,aAEjB,YAAC,iBAAD,CAAgBsC,KAAK,QAAQM,KAAK,QAAQP,GAAG,OAAOrC,QAAQ,mBAE5D,YAAC,QAAD,CAAOA,QAAQ,SAAf,aAIF,YAAC,YAAD,CAAWA,QAAQ,aAEjB,YAAC,iBAAD,CAAgBsC,KAAK,QAAQM,KAAK,QAAQP,GAAG,QAAQrC,QAAQ,mBAE7D,YAAC,QAAD,CAAOA,QAAQ,SAAf,gBAUA,YAAC,YAAD,CAAWkC,KAAG,EAACC,MAAI,EAACnC,QAAQ,aAElC,YAAC,SAAD,CAAQoC,GAAI,GAAIpC,QAAQ,UAEtB,YAAC,IAAD,CAAQqC,GAAG,SAASC,KAAK,SAASO,QAAS,SAAAC,GACjCC,MAAMC,KAAKC,UAAUH,EAAO,KAAM,IAClCC,MAAM,8CACNG,QAAQC,IAAIL,IACXpB,SAAO,EAAC1B,QAAQ,UAJ3B,cAWA,iBAAQ,CACN,GAAM,cADR,cAGA,8BACE,iBAAGC,WAAW,cAAd,qCAAiE,0BAAYA,WAAW,KAAvB,SAAjE,4BAEF,kEAAiD,0BAAYA,WAAW,KAAvB,YAAjD,2EAAiL,0BAAYA,WAAW,KAAvB,aAAjL,KAA4O,0BAAYA,WAAW,KAAvB,cAA5O,oDAAuV,0BAAYA,WAAW,KAAvB,WAAvV,KAAgZ,0BAAYA,WAAW,KAAvB,YAAhZ,KAA0c,0BAAYA,WAAW,KAAvB,WAA1c,KAAmgB,0BAAYA,WAAW,KAAvB,UAAngB,uCAA6lB,0BAAYA,WAAW,KAAvB,sBAA7lB,mBACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,0sBAqCL,2GAA0F,0BAAYA,WAAW,KAAvB,YAA1F,eACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,6XAAwYC,QAAS,CAClbL,QACAH,kBACAS,eACAC,SACAC,UACAC,WACAC,WACAC,eACAC,cACAC,sBACAC,0BACAC,sBACAC,gCACAC,gBACAC,aACAC,aACAC,YACAC,sBACAC,sBACCrB,QAAQ,cACb,YAAC,IAAD,CAAMyB,OAAQ,YAAC,IAAD,CAAUzB,QAAQ,aAAeuB,MAAO,YAAC,IAAD,CAASvB,QAAQ,YAAcA,QAAQ,QAC3F,gCAGA,YAAC,IAAD,CAAOsC,KAAK,QAAQD,GAAG,SAASE,YAAY,QAAQvC,QAAQ,UAC5D,YAAC,IAAD,CAAQsC,KAAK,SAASD,GAAG,UAAUQ,QAAS,SAAAC,GACtCC,MAAMC,KAAKC,UAAUH,EAAO,KAAM,IAClCC,MAAM,8CACNG,QAAQC,IAAIL,IACX9C,QAAQ,UAJf,YAOA,iBAAQ,CACN,GAAM,qBADR,qBAGA,8BACE,iBAAGC,WAAW,cAAd,qCAAiE,0BAAYA,WAAW,KAAvB,aAAjE,2CAEF,kEAAiD,0BAAYA,WAAW,KAAvB,YAAjD,wBAA8H,0BAAYA,WAAW,KAAvB,aAA9H,uFACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,uQAkBL,oCAAmB,0BAAYA,WAAW,KAAvB,YAAnB,oFACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,yXAuBL,2GAA0F,0BAAYA,WAAW,KAAvB,YAA1F,eACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,+YAA0ZC,QAAS,CACpcL,QACAH,kBACAS,eACAC,SACAC,UACAC,WACAC,WACAC,eACAC,cACAC,sBACAC,0BACAC,sBACAC,gCACAC,gBACAC,aACAC,aACAC,YACAC,sBACAC,sBACCrB,QAAQ,cACb,YAAC,IAAD,CAAMyB,OAAQ,YAAC,IAAD,CAAmBzB,QAAQ,sBAAwBuB,MAAO,YAAC,IAAD,CAAkBvB,QAAQ,qBAAuBA,QAAQ,QAC/H,gCAGA,YAAC,IAAD,CAAOsC,KAAK,QAAQD,GAAG,SAASE,YAAY,QAAQvC,QAAQ,UAC5D,YAAC,IAAD,CAAQsC,KAAK,SAASD,GAAG,UAAUQ,QAAS,SAAAC,GACtCC,MAAMC,KAAKC,UAAUH,EAAO,KAAM,IAClCC,MAAM,8CACNG,QAAQC,IAAIL,IACX9C,QAAQ,UAJf,YAOA,iBAAQ,CACN,GAAM,iBADR,iBAGA,8DAA6C,0BAAYC,WAAW,KAAvB,sBAA7C,iCACA,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIA,WAAW,MAAf,OAA4B,0BAAYA,WAAW,MAAvB,QAA5B,uBAAqG,0BAAYA,WAAW,MAAvB,YAArG,eACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,QAApB,uCACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,SAApB,yDAAgI,0BAAYA,WAAW,MAAvB,qCAAhI,QAAuN,0BAAYA,WAAW,MAAvB,6DAAvN,KACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,QAApB,6CAEF,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,MAFH,KAEwD,0BAAYA,WAAW,MAAvB,QAFxD,KAE+G,0BAAYA,WAAW,MAAvB,YAF/G,KAE0K,0BAAYA,WAAW,MAAvB,UAF1K,KAEmO,0BAAYA,WAAW,MAAvB,YACnO,oBAAIA,WAAW,MAAS,CACtB,MAAS,SAGb,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,MAFH,IAEuD,0BAAYA,WAAW,MAAvB,QAFvD,KAE8G,0BAAYA,WAAW,MAAvB,YAF9G,KAEyK,0BAAYA,WAAW,MAAvB,UAFzK,KAEkO,0BAAYA,WAAW,MAAvB,YAClO,oBAAIA,WAAW,MAAS,CACtB,MAAS,SAGb,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,OAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,MAFH,IAEuD,0BAAYA,WAAW,MAAvB,QAFvD,KAE8G,0BAAYA,WAAW,MAAvB,YAF9G,KAEyK,0BAAYA,WAAW,MAAvB,UAFzK,KAEkO,0BAAYA,WAAW,MAAvB,WAFlO,KAE4R,0BAAYA,WAAW,MAAvB,aAC5R,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iEAEqE,0BAAYA,WAAW,MAAvB,mEAFrE,6BAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,MAFH,KAEwD,0BAAYA,WAAW,MAAvB,QAFxD,KAE+G,0BAAYA,WAAW,MAAvB,WAF/G,KAEyK,0BAAYA,WAAW,MAAvB,aACzK,oBAAIA,WAAW,MAAS,CACtB,MAAS,SAGb,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,MAFH,KAEwD,0BAAYA,WAAW,MAAvB,QAFxD,KAE+G,0BAAYA,WAAW,MAAvB,YAF/G,KAE0K,0BAAYA,WAAW,MAAvB,UAF1K,KAEmO,0BAAYA,WAAW,MAAvB,WAFnO,KAE6R,0BAAYA,WAAW,MAAvB,aAC7R,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iEAEqE,0BAAYA,WAAW,MAAvB,gCAFrE,6BAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,MAFH,KAEwD,0BAAYA,WAAW,MAAvB,QAFxD,KAE+G,0BAAYA,WAAW,MAAvB,YAF/G,KAE0K,0BAAYA,WAAW,MAAvB,UAF1K,KAEmO,0BAAYA,WAAW,MAAvB,YACnO,oBAAIA,WAAW,MAAS,CACtB,MAAS,WAKjB,0BAAS,0BAAYA,WAAW,KAAvB,YAAT,aACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,+L,6LAgBTJ,EAAWuD,gBAAiB","file":"component---docz-150-styling-mdx-4091246ce0826df9f7a5.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukas/Sites/git/own-packages/react-form-package/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { Form, Field, Button, Select, RadioGroup } from '../src';\nimport { Label } from 'styled-base-components';\nimport { FormGroup, FormControl, FormCheck, FormCheckInput } from 'styled-form-component';\nimport { Column } from 'styled-grid-system-component';\nimport { Button as Btn } from 'styled-button-component';\nimport { MyButton } from './style/MyButton';\nimport { MyInput } from './style/MyInput';\nimport { MyClassNameButton } from './style/MyClassNameButton';\nimport { MyClassNameInput } from './style/MyClassNameInput';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"styling\"\n    }}>{`Styling`}</h1>\n    <p>{`To style this form you have three different options, all requires to pass a React component to a form prop.`}</p>\n    <h2 {...{\n      \"id\": \"css-in-js\"\n    }}>{`CSS-in-JS`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`In this section we will use a library that uses `}<inlineCode parentName=\"p\">{`styled-components`}</inlineCode>{` to style our form`}</p>\n    </blockquote>\n    <p>{`First you have to import the this library and the Form Components you want to use for your styling. In this example we will use `}<a parentName=\"p\" {...{\n        \"href\": \"https://aichbauer.github.io/styled-bootstrap-components/\"\n      }}>{`styled-bootstrap-components`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {\n Form, \n Field, \n Button, \n Select, \n RadioGroup,\n} from 'react-form-package';\nimport {\n  Label,\n  FormGroup,\n  FormControl,\n  FormCheck,\n  FormCheckInput,\n  Column,\n  Button as Btn,\n} from 'styled-bootstrap-components';\n`}</code></pre>\n    <p>{`The next step is to create you form and pass the styled components as props to the `}<inlineCode parentName=\"p\">{`<Form />`}</inlineCode>{` component.`}</p>\n    <Playground __position={0} __code={'<Form\\n  validate\\n  input={<FormControl />}\\n  select={<FormControl select />}\\n  button={<Btn primary mt=\\\"3px\\\" mb=\\\"3px\\\" />}\\n  checkbox={<FormCheckInput />}\\n  radio={<FormCheckInput />}\\n  error={<div style={{ color: \\'red\\' }} />}\\n>\\n  <FormGroup row nomb>\\n    <Column sm={6}>\\n      <FormGroup>\\n        <Label>Email</Label>\\n\\n        <Field id=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"Email\\\" />\\n      </FormGroup>\\n    </Column>\\n\\n    <Column sm={6}>\\n      <FormGroup>\\n        <Label>Password</Label>\\n\\n        <Field id=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" />\\n      </FormGroup>\\n    </Column>\\n  </FormGroup>\\n\\n  <FormGroup row nomb>\\n    <Column sm={12}>\\n      <FormGroup>\\n        <Label>Address</Label>\\n\\n        <Field id=\\\"address\\\" type=\\\"text\\\" placeholder=\\\"1234 Main St\\\" />\\n      </FormGroup>\\n    </Column>\\n  </FormGroup>\\n\\n  <FormGroup row>\\n    <Column sm={12}>\\n      <FormGroup>\\n        <Label>Address 2</Label>\\n\\n        <Field\\n          id=\\\"address2\\\"\\n          type=\\\"text\\\"\\n          placeholder=\\\"Apartment, Studio, or floor\\\"\\n        />\\n      </FormGroup>\\n    </Column>\\n  </FormGroup>\\n\\n  <FormGroup row nomb>\\n    <Column sm={6}>\\n      <FormGroup>\\n        <Label>City</Label>\\n\\n        <Field id=\\\"city\\\" type=\\\"text\\\" />\\n      </FormGroup>\\n    </Column>\\n\\n    <Column sm={4}>\\n      <FormGroup>\\n        <Label>State</Label>\\n\\n        <Select id=\\\"state\\\" type=\\\"select\\\">\\n          <option disabled value=\\\"\\\">\\n            --- Choose a state ---\\n          </option>\\n          <option value=\\\"austria\\\">Austria</option>\\n          <option value=\\\"germany\\\">Germany</option>\\n          <option value=\\\"swiss\\\">Swiss</option>\\n        </Select>\\n      </FormGroup>\\n    </Column>\\n\\n    <Column sm={2}>\\n      <FormGroup>\\n        <Label>Zip</Label>\\n\\n        <Field id=\\\"zip\\\" type=\\\"text\\\" />\\n      </FormGroup>\\n    </Column>\\n  </FormGroup>\\n\\n  <FormGroup row>\\n    <Column sm={12}>\\n      <FormCheck ml=\\\"20px\\\">\\n        <Field id=\\\"checkbox\\\" type=\\\"checkbox\\\" />\\n\\n        <Label>Accept Terms and Conditions</Label>\\n      </FormCheck>\\n    </Column>\\n  </FormGroup>\\n\\n  <FormGroup row>\\n    <Column sm={12}>\\n      <Label>Choose an option</Label>\\n\\n      <RadioGroup type=\\\"radio\\\" id=\\\"radio\\\" required>\\n        <FormCheck>\\n          <FormCheckInput type=\\\"radio\\\" name=\\\"radio\\\" id=\\\"test\\\" />\\n\\n          <Label>Option 1</Label>\\n        </FormCheck>\\n\\n        <FormCheck>\\n          <FormCheckInput type=\\\"radio\\\" name=\\\"radio\\\" id=\\\"test2\\\" />\\n\\n          <Label>Option 2</Label>\\n        </FormCheck>\\n      </RadioGroup>\\n    </Column>\\n  </FormGroup>\\n\\n  <FormGroup row nomb>\\n    <Column sm={12}>\\n      <Button\\n        id=\\\"submit\\\"\\n        type=\\\"submit\\\"\\n        onClick={state => {\\n          alert(JSON.stringify(state, null, 2))\\n          alert(\\'open the console to see the whole state...\\')\\n          console.log(state)\\n        }}\\n        primary\\n      >\\n        Submit\\n      </Button>\\n    </Column>\\n  </FormGroup>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Field,\n      Button,\n      Select,\n      RadioGroup,\n      Label,\n      FormGroup,\n      FormControl,\n      FormCheck,\n      FormCheckInput,\n      Column,\n      Btn,\n      MyButton,\n      MyInput,\n      MyClassNameButton,\n      MyClassNameInput\n    }} mdxType=\"Playground\">\n  <Form validate input={<FormControl mdxType=\"FormControl\" />} select={<FormControl select mdxType=\"FormControl\" />} button={<Btn primary mt=\"3px\" mb=\"3px\" mdxType=\"Btn\" />} checkbox={<FormCheckInput mdxType=\"FormCheckInput\" />} radio={<FormCheckInput mdxType=\"FormCheckInput\" />} error={<div style={{\n        color: 'red'\n      }} />} mdxType=\"Form\">\n        <FormGroup row nomb mdxType=\"FormGroup\">\n\n  <Column sm={6} mdxType=\"Column\">\n\n    <FormGroup mdxType=\"FormGroup\">\n\n      <Label mdxType=\"Label\">Email</Label>\n\n      <Field id=\"email\" type=\"email\" placeholder=\"Email\" mdxType=\"Field\" />\n\n    </FormGroup>\n\n  </Column>\n\n  <Column sm={6} mdxType=\"Column\">\n\n    <FormGroup mdxType=\"FormGroup\">\n\n      <Label mdxType=\"Label\">Password</Label>\n\n      <Field id=\"password\" type=\"password\" placeholder=\"Password\" mdxType=\"Field\" />\n\n    </FormGroup>\n\n  </Column>\n\n        </FormGroup>\n\n        <FormGroup row nomb mdxType=\"FormGroup\">\n\n  <Column sm={12} mdxType=\"Column\">\n\n    <FormGroup mdxType=\"FormGroup\">\n\n      <Label mdxType=\"Label\">Address</Label>\n\n      <Field id=\"address\" type=\"text\" placeholder=\"1234 Main St\" mdxType=\"Field\" />\n\n    </FormGroup>\n\n  </Column>\n\n        </FormGroup>\n\n        <FormGroup row mdxType=\"FormGroup\">\n\n  <Column sm={12} mdxType=\"Column\">\n\n    <FormGroup mdxType=\"FormGroup\">\n\n      <Label mdxType=\"Label\">Address 2</Label>\n\n      <Field id=\"address2\" type=\"text\" placeholder=\"Apartment, Studio, or floor\" mdxType=\"Field\" />\n\n    </FormGroup>\n\n  </Column>\n\n        </FormGroup>\n\n        <FormGroup row nomb mdxType=\"FormGroup\">\n\n  <Column sm={6} mdxType=\"Column\">\n\n    <FormGroup mdxType=\"FormGroup\">\n\n      <Label mdxType=\"Label\">City</Label>\n\n      <Field id=\"city\" type=\"text\" mdxType=\"Field\" />\n\n    </FormGroup>\n\n  </Column>\n\n  <Column sm={4} mdxType=\"Column\">\n\n    <FormGroup mdxType=\"FormGroup\">\n\n      <Label mdxType=\"Label\">State</Label>\n\n      <Select id=\"state\" type=\"select\" mdxType=\"Select\">\n        <option disabled value=\"\">--- Choose a state ---</option>\n        <option value=\"austria\">Austria</option>\n        <option value=\"germany\">Germany</option>\n        <option value=\"swiss\">Swiss</option>\n      </Select>\n\n    </FormGroup>\n\n  </Column>\n\n  <Column sm={2} mdxType=\"Column\">\n\n    <FormGroup mdxType=\"FormGroup\">\n\n      <Label mdxType=\"Label\">Zip</Label>\n\n      <Field id=\"zip\" type=\"text\" mdxType=\"Field\" />\n\n    </FormGroup>\n\n  </Column>\n\n        </FormGroup>\n\n        <FormGroup row mdxType=\"FormGroup\">\n\n  <Column sm={12} mdxType=\"Column\">\n\n    <FormCheck ml=\"20px\" mdxType=\"FormCheck\">\n\n      <Field id=\"checkbox\" type=\"checkbox\" mdxType=\"Field\" />\n\n      <Label mdxType=\"Label\">Accept Terms and Conditions</Label>\n\n    </FormCheck>\n\n  </Column>\n\n        </FormGroup>\n\n        <FormGroup row mdxType=\"FormGroup\">\n\n  <Column sm={12} mdxType=\"Column\">\n\n    <Label mdxType=\"Label\">Choose an option</Label>\n\n    <RadioGroup type=\"radio\" id=\"radio\" required mdxType=\"RadioGroup\">\n\n      <FormCheck mdxType=\"FormCheck\">\n\n        <FormCheckInput type=\"radio\" name=\"radio\" id=\"test\" mdxType=\"FormCheckInput\" />\n\n        <Label mdxType=\"Label\">Option 1</Label>\n\n      </FormCheck>\n\n      <FormCheck mdxType=\"FormCheck\">\n\n        <FormCheckInput type=\"radio\" name=\"radio\" id=\"test2\" mdxType=\"FormCheckInput\" />\n\n        <Label mdxType=\"Label\">Option 2</Label>\n\n      </FormCheck>\n\n    </RadioGroup>\n\n  </Column>\n\n        </FormGroup>\n\n        <FormGroup row nomb mdxType=\"FormGroup\">\n\n  <Column sm={12} mdxType=\"Column\">\n\n    <Button id=\"submit\" type=\"submit\" onClick={state => {\n              alert(JSON.stringify(state, null, 2));\n              alert('open the console to see the whole state...');\n              console.log(state);\n            }} primary mdxType=\"Button\">Submit</Button>\n\n  </Column>\n\n        </FormGroup>\n  </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"style-prop\"\n    }}>{`style prop`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`In this section we will use a the `}<inlineCode parentName=\"p\">{`style`}</inlineCode>{` prop to style our form`}</p>\n    </blockquote>\n    <p>{`To style your form pass components to the `}<inlineCode parentName=\"p\">{`<Form />`}</inlineCode>{` component that are styled with the style tag. When you create your own `}<inlineCode parentName=\"p\">{`<input />`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<button />`}</inlineCode>{` components do not forget do bind functions like `}<inlineCode parentName=\"p\">{`onClick`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`onChange`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`onFocus`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`onBlur`}</inlineCode>{`. This functions are needed to make `}<inlineCode parentName=\"p\">{`react-form-package`}</inlineCode>{` work properly.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const MyButton = (props) => (\n  <button\n    type=\"submit\"\n    style={{\n      margin: '10px 0px',\n      padding: '8px 24px',\n      borderRadius: '5px',\n      border: 'none',\n      background: '#7FDBFF',\n      color: '#001f3f',\n      cursor: 'pointer',\n    }}\n    onClick={props.onClick}\n  >\n    {props.children}\n  </button>\n);\n\nconst MyInput = (props) => (\n  <input\n    style={{\n      margin: '10px 0px',\n      padding: '8px 3px',\n      border: '1px solid #7FDBFF',\n      borderRadius: '5px',\n      color: 'black',\n    }}\n    value={props.value}\n    placeholder={props.placeholder}\n    onChange={props.onChange}\n    onBlur={props.onBlur}\n    onFocus={props.onFocus}\n  />\n);\n`}</code></pre>\n    <p>{`The next step is to create you form and pass the styled components as props to the `}<inlineCode parentName=\"p\">{`<Form />`}</inlineCode>{` component.`}</p>\n    <Playground __position={1} __code={'<Form button={<MyButton />} input={<MyInput />}>\\n  <div>Email</div>\\n  <Field type=\\\"email\\\" id=\\\"email2\\\" placeholder=\\\"Email\\\" />\\n  <Button\\n    type=\\\"submit\\\"\\n    id=\\\"submit2\\\"\\n    onClick={state => {\\n      alert(JSON.stringify(state, null, 2))\\n      alert(\\'open the console to see the whole state...\\')\\n      console.log(state)\\n    }}\\n  >\\n    Submit\\n  </Button>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Field,\n      Button,\n      Select,\n      RadioGroup,\n      Label,\n      FormGroup,\n      FormControl,\n      FormCheck,\n      FormCheckInput,\n      Column,\n      Btn,\n      MyButton,\n      MyInput,\n      MyClassNameButton,\n      MyClassNameInput\n    }} mdxType=\"Playground\">\n  <Form button={<MyButton mdxType=\"MyButton\" />} input={<MyInput mdxType=\"MyInput\" />} mdxType=\"Form\">\n    <div>\n      Email\n    </div>\n    <Field type=\"email\" id=\"email2\" placeholder=\"Email\" mdxType=\"Field\" />\n    <Button type=\"submit\" id=\"submit2\" onClick={state => {\n          alert(JSON.stringify(state, null, 2));\n          alert('open the console to see the whole state...');\n          console.log(state);\n        }} mdxType=\"Button\">Submit</Button>\n  </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"css-and-classname\"\n    }}>{`CSS and className`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`In this section we will use a the `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{` prop and a css file to style our form`}</p>\n    </blockquote>\n    <p>{`To style your form pass components to the `}<inlineCode parentName=\"p\">{`<Form />`}</inlineCode>{` component that have `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{` prop and use css files (make sure to have an appropriate loader for your bundler).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.button {\n  background: #001f3f;\n  border: 1px solid black;\n  padding: 8px 24px;\n  border-radius: 3px;\n  color: white;\n  cursor: pointer;\n}\n\n.input {\n  margin: 10px 0px;\n  padding: 8px 3px;\n  border: 1px solid #001f3f;\n  border-radius: 5px;\n}\n`}</code></pre>\n    <p>{`Import your `}<inlineCode parentName=\"p\">{`CSS file`}</inlineCode>{` to your application and make sure you have a proper loader for your stylesheet.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import './style.css';\n\nconst MyClassNameButton = (props) => (\n  <button\n    clssName=\"button\"\n  >\n    {children}\n  </button>\n);\n\nconst MyClassNameInput = (props) => (\n  <input\n    className=\"input\"\n    value={props.value}\n    placeholder={props.placeholder}\n    onChange={props.onChange}\n    onBlur={props.onBlur}\n    onFocus={props.onFocus}\n  />\n);\n`}</code></pre>\n    <p>{`The next step is to create you form and pass the styled components as props to the `}<inlineCode parentName=\"p\">{`<Form />`}</inlineCode>{` component.`}</p>\n    <Playground __position={2} __code={'<Form button={<MyClassNameButton />} input={<MyClassNameInput />}>\\n  <div>Email</div>\\n  <Field type=\\\"email\\\" id=\\\"email3\\\" placeholder=\\\"Email\\\" />\\n  <Button\\n    type=\\\"submit\\\"\\n    id=\\\"submit2\\\"\\n    onClick={state => {\\n      alert(JSON.stringify(state, null, 2))\\n      alert(\\'open the console to see the whole state...\\')\\n      console.log(state)\\n    }}\\n  >\\n    Submit\\n  </Button>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Field,\n      Button,\n      Select,\n      RadioGroup,\n      Label,\n      FormGroup,\n      FormControl,\n      FormCheck,\n      FormCheckInput,\n      Column,\n      Btn,\n      MyButton,\n      MyInput,\n      MyClassNameButton,\n      MyClassNameInput\n    }} mdxType=\"Playground\">\n  <Form button={<MyClassNameButton mdxType=\"MyClassNameButton\" />} input={<MyClassNameInput mdxType=\"MyClassNameInput\" />} mdxType=\"Form\">\n    <div>\n      Email\n    </div>\n    <Field type=\"email\" id=\"email3\" placeholder=\"Email\" mdxType=\"Field\" />\n    <Button type=\"submit\" id=\"submit2\" onClick={state => {\n          alert(JSON.stringify(state, null, 2));\n          alert('open the console to see the whole state...');\n          console.log(state);\n        }} mdxType=\"Button\">Submit</Button>\n  </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"passing-props\"\n    }}>{`Passing props`}</h2>\n    <p>{`To make your own components work with `}<inlineCode parentName=\"p\">{`react-form-package`}</inlineCode>{` you have to pass some props.`}</p>\n    <h3 {...{\n      \"id\": \"components\"\n    }}>{`components`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`Prop`}</inlineCode>{` is the prop on the `}<inlineCode parentName=\"li\">{`<Form />`}</inlineCode>{` component.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`HTML`}</inlineCode>{` is the actual HTML element to use.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Props`}</inlineCode>{` are the props you have to pass these components e.g. `}<inlineCode parentName=\"li\">{`id={prop.id} or id={this.prop.id}`}</inlineCode>{` or  `}<inlineCode parentName=\"li\">{`onChange={prop.onChange} or onChange={this.prop.onChange}`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Info`}</inlineCode>{` shows you which props you have to bind.`}</li>\n    </ul>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`HTML`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Props`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Info`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`input`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`input`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`id`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`type`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`onChange`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`onBlur`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`onFocus`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`checkbox`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`input`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`id`}</inlineCode>{`,`}<inlineCode parentName=\"td\">{`type`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`onChange`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`onBlur`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`onFocus`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`radio`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`div`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`id`}</inlineCode>{`,`}<inlineCode parentName=\"td\">{`type`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`onChange`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`onBlur`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`onFocus`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`children`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`this is a wrapper that renders every child, and watch out for `}<inlineCode parentName=\"td\">{`<input type=\"radio\" value=\"someValue\" name=\"theIdRadioGroup\" />`}</inlineCode>{` and handles their state`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`button`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`input`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`id`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`type`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`onClick`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`children`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`select`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`select`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`id`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`type`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`onChange`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`onBlur`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`onFocus`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`children`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`this is a wrapper that renders every child, and watch out for `}<inlineCode parentName=\"td\">{`<option value=\"someValue\" />`}</inlineCode>{` and handles their state`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`textarea`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`textarea`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`id`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`type`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`onChange`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`onBlur`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`onFocus`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`A `}<inlineCode parentName=\"p\">{`textarea`}</inlineCode>{` example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const myTextarea = (props) => (\n  <textarea\n    id={props.id}\n    type={props.type}\n    onChange={props.onChange}\n    onBlur={props.onBlur}\n    onFocus={props.onFocus}\n  />\n);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}