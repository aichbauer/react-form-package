{"version":3,"sources":["webpack:///../docz/140.errorFeedbackDisabledButton.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Form","Field","Button","PopoverHint","isMDXComponent"],"mappings":"shBASO,IAAMA,EAAe,Q,0NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,+BADR,+BAGA,+KACA,oIACA,6EAA4D,mBAAGC,WAAW,KAAQ,CAC9E,KAAQ,4DADgD,+BAA5D,8GAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,0LAcL,wDAAuC,0BAAYA,WAAW,KAAvB,gBAAvC,+BAA+H,0BAAYA,WAAW,KAAvB,gBAA/H,gGAAwR,0BAAYA,WAAW,KAAvB,cAAxR,yBACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,wnEAwFL,0CAAyB,0BAAYA,WAAW,KAAvB,mBAAzB,4BACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,kBAAmBC,QAAS,CAC7DL,QACAH,kBACAS,eACAC,SACAC,UACAC,WACAC,iBACCT,QAAQ,cACb,YAAC,IAAD,CAAaA,QAAQ,kB,iNAMvBH,EAAWa,gBAAiB","file":"component---docz-140-error-feedback-disabled-button-mdx-8d988f0cf29c8c700ea3.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukas/Sites/git/own-packages/react-form-package/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { Form, Field, Button } from '../src';\nimport { PopoverHint } from './components/PopoverHint';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"feedback-on-disabled-button\"\n    }}>{`Feedback on disabled Button`}</h1>\n    <p>{`Sometimes it is necessary to show an informal error message to the user when is hovering on a disabled button (which means the form is not valid yet).`}</p>\n    <p>{`For this example we use a popover for our disabled button that gives the user a hint what should be filled.`}</p>\n    <p>{`First import all the components that we need. We use `}<a parentName=\"p\" {...{\n        \"href\": \"https://aichbauer.github.io/styled-bootstrap-components\"\n      }}>{`styled-bootstrap-components`}</a>{` for our popup. You could also use a toast or something similar to indicate the user what fields are open.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import {\n  Form,\n  Field,\n  Button,\n} from 'react-form-package';\nimport {\n  Popover,\n  PopoverArrow,\n  PopoverBody,\n  PopoverHeader,\n} from 'styled-bootstrap-component';\n`}</code></pre>\n    <p>{`Next we make use of the buttons `}<inlineCode parentName=\"p\">{`onMouseEnter`}</inlineCode>{` function (unfortunatly the `}<inlineCode parentName=\"p\">{`onMouseLeave`}</inlineCode>{` function does not work on disabled buttons so we can not use it to hide the popover), and a `}<inlineCode parentName=\"p\">{`setTimeout`}</inlineCode>{` to hide the popover.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`class PopoverHint extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      top: 0,\n      left: 0,\n      hidden: true,\n      notValidFields: '',\n    };\n\n    this.handlePopover = this.handlePopover.bind(this);\n  }\n\n  handlePopover(ev, state) {\n    const { hidden } = this.state;\n\n    let notValidFields = Object.entries(state.meta).map((entry) => {\n      if (!entry[1].valid) {\n        return entry[0];\n      }\n    });\n\n    notValidFields = notValidFields.filter((i) => i !== undefined);\n\n    if (!state.formValid) {\n      this.setState({\n        top: ev.target.offsetTop - ev.target.offsetHeight,\n        left: ev.target.offsetLeft + ev.target.offsetWidth,\n        hidden: !hidden,\n        notValidFields: notValidFields.join(),\n      }, () => {\n        const { hidden: h } = this.state;\n        setTimeout(() => this.setState({\n          hidden: !h,\n        }), 1500);\n      });\n    }\n  }\n\n  render() {\n    const {\n      top,\n      left,\n      hidden,\n      notValidFields,\n    } = this.state;\n\n    return (\n      <Form\n        validate\n        input={<FormControl />}\n        button={<Btn primary mt=\"3px\" mb=\"3px\" />}\n      >\n        <Field type=\"email\" id=\"email\" required />\n        <div>\n          <Button\n            danger\n            onClick={(state) => {\n              alert(JSON.stringify(state, null, 2));\n              alert('open the console to see the whole state...');\n              console.log(state);\n            }}\n            onMouseEnter={(e, state) => this.handlePopover(e, state)}\n          >\n            Hover button to show which fields are not valid\n          </Button>\n          <Popover\n            hidden={hidden}\n            style={{\n              top: \\`\\${top}px\\`,\n              left: \\`\\${left}px\\`,\n            }}\n            right\n          >\n            <PopoverArrow right />\n            <PopoverHeader right>You need to fill out this fields</PopoverHeader>\n            <PopoverBody right>{notValidFields}</PopoverBody>\n          </Popover>\n        </div>\n      </Form>\n    );\n  }\n}\n\nexport { PopoverHint };\n`}</code></pre>\n    <p>{`Now we render the `}<inlineCode parentName=\"p\">{`<PopoverHint />`}</inlineCode>{` and can see the result.`}</p>\n    <Playground __position={0} __code={'<PopoverHint />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Field,\n      Button,\n      PopoverHint\n    }} mdxType=\"Playground\">\n  <PopoverHint mdxType=\"PopoverHint\" />\n    </Playground> \n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}