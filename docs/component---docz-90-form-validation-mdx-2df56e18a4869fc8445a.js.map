{"version":3,"sources":["webpack:///../docz/90.formValidation.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Form","Field","Button","Playground","validate","type","id","onClick","state","alert","JSON","stringify","console","log","required","min","max","value","errorMessage","sameAs","match","isMDXComponent"],"mappings":"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","file":"component---docz-90-form-validation-mdx-2df56e18a4869fc8445a.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukas/Sites/git/own-packages/react-form-package/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Form, Field, Button } from '../src';\nimport { Playground } from 'docz';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"form-validation\"\n    }}>{`Form Validation`}</h1>\n    <p>{`Almost any form needs validation in some way. Fortunatly `}<inlineCode parentName=\"p\">{`react-form-package`}</inlineCode>{` comes with an declarative inbuild validation system.`}</p>\n    <p>{`What does decalrative mean in that way?`}</p>\n    <h2 {...{\n      \"id\": \"basic-example\"\n    }}>{`Basic Example`}</h2>\n    <p>{`If you want that your input field only allows valid emails you can add the type `}<inlineCode parentName=\"p\">{`email`}</inlineCode>{` to the `}<inlineCode parentName=\"p\">{`<Field />`}</inlineCode>{` component. If you also set `}<inlineCode parentName=\"p\">{`validate`}</inlineCode>{` property on the `}<inlineCode parentName=\"p\">{`<Form />`}</inlineCode>{` component the button only allowes to submit if the form is completely valid.`}</p>\n    <p>{`In the next example you are able to submit the form if the input is empty (because this field is not required) and if the input value is set to a valid email, but not if the input value is not a valid email.`}</p>\n    <Playground __position={0} __code={'<Form validate>\\n  <div>\\n    Email\\n    <div>\\n      <Field type=\\\"email\\\" id=\\\"email\\\" />\\n    </div>\\n  </div>\\n  <div>\\n    <Button\\n      type=\\\"submit\\\"\\n      id=\\\"submit\\\"\\n      onClick={state => {\\n        alert(JSON.stringify(state, null, 2))\\n        alert(\\'open the console to see the whole state...\\')\\n        console.log(state)\\n      }}\\n    >\\n      Submit\\n    </Button>\\n  </div>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Form,\n      Field,\n      Button,\n      Playground\n    }} mdxType=\"Playground\">\n  <Form validate mdxType=\"Form\">\n    <div>\n      Email\n      <div>\n        <Field type=\"email\" id=\"email\" mdxType=\"Field\" />\n      </div>\n    </div>\n    <div>\n      <Button type=\"submit\" id=\"submit\" onClick={state => {\n            alert(JSON.stringify(state, null, 2));\n            alert('open the console to see the whole state...');\n            console.log(state);\n          }} mdxType=\"Button\">\n        Submit\n      </Button>\n    </div>\n  </Form>\n    </Playground>\n    <p>{`If you add the property `}<inlineCode parentName=\"p\">{`required`}</inlineCode>{` to the `}<inlineCode parentName=\"p\">{`<Field />`}</inlineCode>{` component, everything stays the same except that you are not able to submit the form if the input value is empty.`}</p>\n    <Playground __position={1} __code={'<Form validate>\\n  <div>\\n    Email\\n    <div>\\n      <Field type=\\\"email\\\" id=\\\"email\\\" required />\\n    </div>\\n  </div>\\n  <div>\\n    <Button\\n      type=\\\"submit\\\"\\n      id=\\\"submit\\\"\\n      onClick={state => {\\n        alert(JSON.stringify(state, null, 2))\\n        alert(\\'open the console to see the whole state...\\')\\n        console.log(state)\\n      }}\\n    >\\n      Submit\\n    </Button>\\n  </div>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Form,\n      Field,\n      Button,\n      Playground\n    }} mdxType=\"Playground\">\n  <Form validate mdxType=\"Form\">\n    <div>\n      Email\n      <div>\n        <Field type=\"email\" id=\"email\" required mdxType=\"Field\" />\n      </div>\n    </div>\n    <div>\n      <Button type=\"submit\" id=\"submit\" onClick={state => {\n            alert(JSON.stringify(state, null, 2));\n            alert('open the console to see the whole state...');\n            console.log(state);\n          }} mdxType=\"Button\">\n        Submit\n      </Button>\n    </div>\n  </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"type-validation\"\n    }}>{`Type validation`}</h2>\n    <p>{`A `}<inlineCode parentName=\"p\">{`<Field />`}</inlineCode>{` component can have diffferent `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` properties.`}</p>\n    <p>{`Additionally to the validation, if the browser supports HTML5 input types the input fields will be displayed as them, only allowing numbers by default if the type is set to `}<inlineCode parentName=\"p\">{`number`}</inlineCode>{`, etc. If the browser does not support HTML5 it will automatically uses a text input that keeps the validation. If the user inputs a non numeric character in a `}<inlineCode parentName=\"p\">{`number`}</inlineCode>{` input it will display the the error message and you cannot submit the form.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`checkbox`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`no`}</inlineCode>{` additional validation`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`date`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`validates if the input value matches the format `}<inlineCode parentName=\"td\">{`YYYY-MM-DD`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`textarea`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`no`}</inlineCode>{` additional validation`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`datetime-local`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`validates if the input value matches the format `}<inlineCode parentName=\"td\">{`YYYY-MM-DDTHH:MM`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`email`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`validates if the input value matches the `}<inlineCode parentName=\"td\">{`standard email format`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`validates if the input value matches a `}<inlineCode parentName=\"td\">{`valid number`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`tel`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`validates if the input value matches the `}<inlineCode parentName=\"td\">{`standard phone number format`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`text`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`no`}</inlineCode>{` additional validation`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`password`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`no`}</inlineCode>{` additional validation`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`time`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`validates if the input value matches the format `}<inlineCode parentName=\"td\">{`HH:MM`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`url`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`validates if the input value matches the `}<inlineCode parentName=\"td\">{`standard url format`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`file`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`no`}</inlineCode>{` additional validation`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"additional-rules\"\n    }}>{`Additional rules`}</h2>\n    <p>{`If you are using a `}<inlineCode parentName=\"p\">{`<Field />`}</inlineCode>{` component you can also add some additional rules for the validation.\n`}<inlineCode parentName=\"p\">{`required`}</inlineCode>{` will work on all components, the `}<inlineCode parentName=\"p\">{`<Field />`}</inlineCode>{`, the `}<inlineCode parentName=\"p\">{`<RadioGroup />`}</inlineCode>{`, and the `}<inlineCode parentName=\"p\">{`<Select />`}</inlineCode></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`required`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Bool`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`validates if the `}<inlineCode parentName=\"td\">{`input value is not empty`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`min`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String (digit or date (YYYY-MM-DD))`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`text`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`textarea`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`password`}</inlineCode>{`: validates if the input value is at least `}<inlineCode parentName=\"td\">{`min characters long`}</inlineCode>{`; `}<inlineCode parentName=\"td\">{`number`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`date`}</inlineCode>{`: validates if the input value is at least `}<inlineCode parentName=\"td\">{`min`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`max`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String (digit or date (YYYY-MM-DD))`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`text`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`textarea`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`password`}</inlineCode>{`: validates if the input value is maximum `}<inlineCode parentName=\"td\">{`max characters long`}</inlineCode>{`; `}<inlineCode parentName=\"td\">{`number`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`date`}</inlineCode>{`: validates if the input value is maximum `}<inlineCode parentName=\"td\">{`max`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`match`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Regex`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`validates if the input value matches the `}<inlineCode parentName=\"td\">{`regular expression`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`sameAs`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{` validates if the input of this field has the same value as the field specified in `}<inlineCode parentName=\"td\">{`sameAs`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`validate`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Func`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{` a function that gets access to the value of the field `}<inlineCode parentName=\"td\">{`(value) => // write your own validation`}</inlineCode>{` (do not forget to write your own errorMessage)`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Example with the `}<inlineCode parentName=\"p\">{`required`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`min`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`max`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`validate`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`sameAs`}</inlineCode>{` properties:`}</p>\n    <Playground __position={2} __code={'<Form validate>\\n  <div>\\n    Text required, min, max\\n    <div>\\n      <Field type=\\\"text\\\" id=\\\"text\\\" min=\\\"2\\\" max=\\\"5\\\" required />\\n    </div>\\n  </div>\\n  <div>\\n    Number required, min, max\\n    <div>\\n      <Field type=\\\"number\\\" id=\\\"number\\\" min=\\\"2\\\" max=\\\"5\\\" required />\\n    </div>\\n  </div>\\n  <div>\\n    Text is required and has to validate the `validate` function (value ===\\n    \\'react\\')\\n    <div>\\n      <Field\\n        type=\\\"text\\\"\\n        id=\\\"validate\\\"\\n        validate={value => value === \\'react\\'}\\n        errorMessage={\\n          \\'This field is required\\\\\\\\nThis field has to match \\\"react\\\"\\'\\n        }\\n        required\\n      />\\n    </div>\\n  </div>\\n  <div>\\n    Date required, min, max\\n    <div>\\n      <Field\\n        type=\\\"date\\\"\\n        id=\\\"date\\\"\\n        min=\\\"2018-12-12\\\"\\n        max=\\\"2018-12-24\\\"\\n        required\\n      />\\n    </div>\\n  </div>\\n  <div>\\n    Password has to be the same as password 2\\n    <div>\\n      <Field type=\\\"password\\\" id=\\\"password\\\" sameAs=\\\"password2\\\" required />\\n    </div>\\n  </div>\\n  <div>\\n    Password 2 has to be the same as password\\n    <div>\\n      <Field type=\\\"password\\\" id=\\\"password2\\\" sameAs=\\\"password\\\" required />\\n    </div>\\n  </div>\\n  <div>\\n    <Button\\n      type=\\\"submit\\\"\\n      id=\\\"submit\\\"\\n      onClick={state => {\\n        alert(JSON.stringify(state, null, 2))\\n        alert(\\'open the console to see the whole state...\\')\\n        console.log(state)\\n      }}\\n    >\\n      Submit\\n    </Button>\\n  </div>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Form,\n      Field,\n      Button,\n      Playground\n    }} mdxType=\"Playground\">\n  <Form validate mdxType=\"Form\">\n    <div>\n      Text required, min, max\n      <div>\n        <Field type=\"text\" id=\"text\" min=\"2\" max=\"5\" required mdxType=\"Field\" />\n      </div>\n    </div>\n    <div>\n      Number required, min, max\n      <div>\n        <Field type=\"number\" id=\"number\" min=\"2\" max=\"5\" required mdxType=\"Field\" />\n      </div>\n    </div>\n    <div>\n      Text is required and has to validate the `validate` function (value === 'react')\n      <div>\n        <Field type=\"text\" id=\"validate\" validate={value => value === 'react'} errorMessage={'This field is required\\\\nThis field has to match \"react\"'} required mdxType=\"Field\" />\n      </div>\n    </div>\n    <div>\n      Date required, min, max\n      <div>\n        <Field type=\"date\" id=\"date\" min=\"2018-12-12\" max=\"2018-12-24\" required mdxType=\"Field\" />\n      </div>\n    </div>\n    <div>\n      Password has to be the same as password 2\n      <div>\n        <Field type=\"password\" id=\"password\" sameAs=\"password2\" required mdxType=\"Field\" />\n      </div>\n    </div>\n    <div>\n      Password 2 has to be the same as password\n      <div>\n        <Field type=\"password\" id=\"password2\" sameAs=\"password\" required mdxType=\"Field\" />\n      </div>\n    </div>\n    <div>\n      <Button type=\"submit\" id=\"submit\" onClick={state => {\n            alert(JSON.stringify(state, null, 2));\n            alert('open the console to see the whole state...');\n            console.log(state);\n          }} mdxType=\"Button\">\n        Submit\n      </Button>\n    </div>\n  </Form>\n    </Playground>\n    <p>{`Example with the match property:`}</p>\n    <Playground __position={3} __code={'<Form validate>\\n  <div>\\n    Text required and has to match \\\"react\\\"\\n    <div>\\n      <Field type=\\\"text\\\" id=\\\"text\\\" match={/react/} required />\\n    </div>\\n  </div>\\n  <div>\\n    <Button\\n      type=\\\"submit\\\"\\n      id=\\\"submit\\\"\\n      onClick={state => {\\n        alert(JSON.stringify(state, null, 2))\\n        alert(\\'open the console to see the whole state...\\')\\n        console.log(state)\\n      }}\\n    >\\n      Submit\\n    </Button>\\n  </div>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Form,\n      Field,\n      Button,\n      Playground\n    }} mdxType=\"Playground\">\n  <Form validate mdxType=\"Form\">\n    <div>\n      Text required and has to match \"react\"\n      <div>\n        <Field type=\"text\" id=\"text\" match={/react/} required mdxType=\"Field\" />\n      </div>\n    </div>\n    <div>\n      <Button type=\"submit\" id=\"submit\" onClick={state => {\n            alert(JSON.stringify(state, null, 2));\n            alert('open the console to see the whole state...');\n            console.log(state);\n          }} mdxType=\"Button\">\n        Submit\n      </Button>\n    </div>\n  </Form>\n    </Playground>\n    <p>{`This is just a simple example, off course you are able to pass any regular expression you would like. If you would like to customize the error messages take a look at `}<a parentName=\"p\" {...{\n        \"href\": \"/react-form-package/custom-error-messages\"\n      }}>{`custom error messages`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}