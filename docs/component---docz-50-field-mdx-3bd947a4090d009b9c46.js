(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{JGVd:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return d})),n.d(t,"default",(function(){return m}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("mXGw");var a=n("/FXl"),l=n("TjRS"),r=n("oXiK"),b=n("ZFoC");n("aD51");function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var d={};void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docz/50.field.mdx"}});var c={_frontmatter:d},o=l.a;function m(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,["components"]);return Object(a.b)(o,i({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"field"},"Field"),Object(a.b)("p",null,"This component has to be a child within the ",Object(a.b)("inlineCode",{parentName:"p"},"<Form />")," component. This component handles its own state and on any state change it will report it to the ",Object(a.b)("inlineCode",{parentName:"p"},"<Form />")," component which validates the whole form."),Object(a.b)("h2",{id:"basic-usage"},"Basic Usage"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-jsx"}),"import {\n  Form,\n  Field,\n} from 'react-form-package';\n")),Object(a.b)("p",null,"Render a ",Object(a.b)("inlineCode",{parentName:"p"},"<Form />")," with an email ",Object(a.b)("inlineCode",{parentName:"p"},"<Field />")," and a ",Object(a.b)("inlineCode",{parentName:"p"},"<Button />")," component."),Object(a.b)(b.c,{__position:0,__code:'<Form>\n  <div>\n    <div>Email</div>\n    <div>\n      <Field\n        id="email"\n        type="email"\n        onBlur={state => console.log(\'blur\', state)}\n        reuqired\n      />\n    </div>\n  </div>\n  <div>\n    <Button\n      id="submit"\n      type="submit"\n      onClick={state => {\n        alert(JSON.stringify(state, null, 2))\n        alert(\'open the console to see the whole state...\')\n        console.log(state)\n      }}\n    >\n      Submit\n    </Button>\n  </div>\n</Form>',__scope:{props:n,DefaultLayout:l.a,Form:r.d,Field:r.b,Button:r.a,Playground:b.c},mdxType:"Playground"},Object(a.b)(r.d,{mdxType:"Form"},Object(a.b)("div",null,Object(a.b)("div",null,"Email"),Object(a.b)("div",null,Object(a.b)(r.b,{id:"email",type:"email",onBlur:function(e){return console.log("blur",e)},reuqired:!0,mdxType:"Field"}))),Object(a.b)("div",null,Object(a.b)(r.a,{id:"submit",type:"submit",onClick:function(e){alert(JSON.stringify(e,null,2)),alert("open the console to see the whole state..."),console.log(e)},mdxType:"Button"},"Submit")))),Object(a.b)("h2",{id:"props"},"Props"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",i({parentName:"tr"},{align:null}),"Property "),Object(a.b)("th",i({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",i({parentName:"tr"},{align:null}),"Required"),Object(a.b)("th",i({parentName:"tr"},{align:null}),"Default"),Object(a.b)("th",i({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",i({parentName:"tr"},{align:null}),"id "),Object(a.b)("td",i({parentName:"tr"},{align:null}),"String"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"true"),Object(a.b)("td",i({parentName:"tr"},{align:null})),Object(a.b)("td",i({parentName:"tr"},{align:null}))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",i({parentName:"tr"},{align:null}),"type"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"String"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"true"),Object(a.b)("td",i({parentName:"tr"},{align:null})),Object(a.b)("td",i({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"checkbox"),", ",Object(a.b)("inlineCode",{parentName:"td"},"date"),", ",Object(a.b)("inlineCode",{parentName:"td"},"textarea"),", ",Object(a.b)("inlineCode",{parentName:"td"},"datetime-local"),", ",Object(a.b)("inlineCode",{parentName:"td"},"email"),", ",Object(a.b)("inlineCode",{parentName:"td"},"number"),", ",Object(a.b)("inlineCode",{parentName:"td"},"tel"),", ",Object(a.b)("inlineCode",{parentName:"td"},"text"),", ",Object(a.b)("inlineCode",{parentName:"td"},"password"),", ",Object(a.b)("inlineCode",{parentName:"td"},"time"),", ",Object(a.b)("inlineCode",{parentName:"td"},"url"),", ",Object(a.b)("inlineCode",{parentName:"td"},"file"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",i({parentName:"tr"},{align:null}),"required"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"Bool"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"false"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"false"),Object(a.b)("td",i({parentName:"tr"},{align:null}))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",i({parentName:"tr"},{align:null}),"min"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"String (digit or date (YYYY-MM-DD))"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"false"),Object(a.b)("td",i({parentName:"tr"},{align:null})),Object(a.b)("td",i({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"text"),", ",Object(a.b)("inlineCode",{parentName:"td"},"textarea"),", ",Object(a.b)("inlineCode",{parentName:"td"},"password"),": has to have at least ",Object(a.b)("inlineCode",{parentName:"td"},"min")," characters; ",Object(a.b)("inlineCode",{parentName:"td"},"number"),", ",Object(a.b)("inlineCode",{parentName:"td"},"date"),": has to be at least ",Object(a.b)("inlineCode",{parentName:"td"},"min"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",i({parentName:"tr"},{align:null}),"max"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"String (digit or date (YYYY-MM-DD))"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"false"),Object(a.b)("td",i({parentName:"tr"},{align:null})),Object(a.b)("td",i({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"text"),", ",Object(a.b)("inlineCode",{parentName:"td"},"textarea"),", ",Object(a.b)("inlineCode",{parentName:"td"},"password"),": has to have at least ",Object(a.b)("inlineCode",{parentName:"td"},"min")," characters; ",Object(a.b)("inlineCode",{parentName:"td"},"number"),", ",Object(a.b)("inlineCode",{parentName:"td"},"date"),": has to be at least ",Object(a.b)("inlineCode",{parentName:"td"},"min"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",i({parentName:"tr"},{align:null}),"match"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"RegEx"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"false"),Object(a.b)("td",i({parentName:"tr"},{align:null})),Object(a.b)("td",i({parentName:"tr"},{align:null}),"the input value has to match the ",Object(a.b)("inlineCode",{parentName:"td"},"regular expression"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",i({parentName:"tr"},{align:null}),"sameAs"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"String"),Object(a.b)("td",i({parentName:"tr"},{align:null})," the input value has to have the same value as the input field with the id specified in ",Object(a.b)("inlineCode",{parentName:"td"},"sameAs")),Object(a.b)("td",i({parentName:"tr"},{align:null})),Object(a.b)("td",i({parentName:"tr"},{align:null}))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",i({parentName:"tr"},{align:null}),"preOnChange"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"Func "),Object(a.b)("td",i({parentName:"tr"},{align:null}),"false "),Object(a.b)("td",i({parentName:"tr"},{align:null})),Object(a.b)("td",i({parentName:"tr"},{align:null}),"manipulate the state before its validated (see ",Object(a.b)("a",i({parentName:"td"},{href:"/react-form-package/state-manipulation"}),"State Manipulation"),")")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",i({parentName:"tr"},{align:null}),"errorMessage"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"String"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"false"),Object(a.b)("td",i({parentName:"tr"},{align:null})),Object(a.b)("td",i({parentName:"tr"},{align:null}),"define your own custom error message for the input")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",i({parentName:"tr"},{align:null}),"onFocus"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"Func"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"false"),Object(a.b)("td",i({parentName:"tr"},{align:null})),Object(a.b)("td",i({parentName:"tr"},{align:null}),"get access to the state of the form when the user focus on the input")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",i({parentName:"tr"},{align:null}),"onChange"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"Func"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"false"),Object(a.b)("td",i({parentName:"tr"},{align:null})),Object(a.b)("td",i({parentName:"tr"},{align:null}),"get access to the state of the form when the user changes the input")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",i({parentName:"tr"},{align:null}),"onBlur"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"Func"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"false"),Object(a.b)("td",i({parentName:"tr"},{align:null})),Object(a.b)("td",i({parentName:"tr"},{align:null}),"get access to the state of the form when the user blurs the input")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",i({parentName:"tr"},{align:null}),"dynamic"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"Bool"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"false"),Object(a.b)("td",i({parentName:"tr"},{align:null})),Object(a.b)("td",i({parentName:"tr"},{align:null}),"only needed for ",Object(a.b)("a",i({parentName:"td"},{href:"/react-form-package/dynamic-field-2"}),"dynamically added fields"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",i({parentName:"tr"},{align:null}),"field"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"Object"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"false"),Object(a.b)("td",i({parentName:"tr"},{align:null})," "),Object(a.b)("td",i({parentName:"tr"},{align:null}),"only needed for ",Object(a.b)("a",i({parentName:"td"},{href:"/react-form-package/dynamic-field-2"}),"dynamically added fields"),". This object holds at least ",Object(a.b)("inlineCode",{parentName:"td"},"id"),", ",Object(a.b)("inlineCode",{parentName:"td"},"type"),", and may hold ",Object(a.b)("inlineCode",{parentName:"td"},"min"),", ",Object(a.b)("inlineCode",{parentName:"td"},"max"),", ",Object(a.b)("inlineCode",{parentName:"td"},"required"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",i({parentName:"tr"},{align:null}),"bintTo"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"String, Array"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"false"),Object(a.b)("td",i({parentName:"tr"},{align:null})," "),Object(a.b)("td",i({parentName:"tr"},{align:null})," only needed for ",Object(a.b)("a",i({parentName:"td"},{href:"/react-form-package/bind-input-fields"}),"binding input fields"),". The id/ids of the input/inputs you want to manipulate")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",i({parentName:"tr"},{align:null}),"bintToAllways"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"Bool"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"false"),Object(a.b)("td",i({parentName:"tr"},{align:null})," "),Object(a.b)("td",i({parentName:"tr"},{align:null})," only needed for ",Object(a.b)("a",i({parentName:"td"},{href:"/react-form-package/bind-input-fields-2"}),"binding input fields"),". Only needed if you want that the bindToCallback is triggered even the bound input field was already touched (blurred)")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",i({parentName:"tr"},{align:null}),"bindToCallback"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"Func"),Object(a.b)("td",i({parentName:"tr"},{align:null}),"false"),Object(a.b)("td",i({parentName:"tr"},{align:null})),Object(a.b)("td",i({parentName:"tr"},{align:null}),"only needed for ",Object(a.b)("a",i({parentName:"td"},{href:"/react-form-package/bind-input-fields"}),"binding input fields"),". The callback to set the target's (",Object(a.b)("inlineCode",{parentName:"td"},"bindTo"),") input value, which gets called ",Object(a.b)("inlineCode",{parentName:"td"},"onChange")," (return a single value or an array of values)")))))}m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docz/50.field.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docz-50-field-mdx-3bd947a4090d009b9c46.js.map