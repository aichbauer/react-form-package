// eslint-disable

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.jsImageKit = void 0;

var jsImageKit = function jsImageKit(files) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    width: 0,
    height: 0,
    quality: 0.35
  };
  return Object.entries(files).map(function (entry) {
    var reader = new FileReader();
    reader.readAsDataURL(entry[1]);
    console.log(entry[1]);
    return reader.onload = function (event) {
      var img = new Image();
      img.src = event.target.result;
      return img.onload = function () {
        var elem = document.createElement('canvas');
        var ctx = elem.getContext('2d');
        var width = options.width || img.naturalWidth;
        var height = options.height || img.naturalHeight;
        elem.width = width;
        elem.height = height;
        ctx.drawImage(img, 0, 0, width, height);
        return ctx.canvas.toBlob(function (blob) {
          var file = new File([blob], entry[1].name, {
            type: entry[1].type,
            lastModified: Number(new Date())
          });
          console.log(file)
          return file;
        }, entry[1].type, options.quality);
      };
    };
  });
};

exports.jsImageKit = jsImageKit;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC50cyJdLCJuYW1lcyI6WyJqc0ltYWdlS2l0IiwiZmlsZXMiLCJvcHRpb25zIiwid2lkdGgiLCJoZWlnaHQiLCJxdWFsaXR5IiwiT2JqZWN0IiwiZW50cmllcyIsIm1hcCIsImVudHJ5IiwicmVhZGVyIiwiRmlsZVJlYWRlciIsInJlYWRBc0RhdGFVUkwiLCJjb25zb2xlIiwibG9nIiwib25sb2FkIiwiZXZlbnQiLCJpbWciLCJJbWFnZSIsInNyYyIsInRhcmdldCIsInJlc3VsdCIsImVsZW0iLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjdHgiLCJnZXRDb250ZXh0IiwibmF0dXJhbFdpZHRoIiwibmF0dXJhbEhlaWdodCIsImRyYXdJbWFnZSIsImNhbnZhcyIsInRvQmxvYiIsImJsb2IiLCJmaWxlIiwiRmlsZSIsIm5hbWUiLCJ0eXBlIiwibGFzdE1vZGlmaWVkIiwiTnVtYmVyIiwiRGF0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQU1BLElBQU1BLFVBQVUsR0FBRyxTQUFiQSxVQUFhLENBQUNDLEtBQUQsRUFJYjtBQUFBLE1BSitCQyxPQUkvQix1RUFKa0Q7QUFDdERDLElBQUFBLEtBQUssRUFBRSxDQUQrQztBQUV0REMsSUFBQUEsTUFBTSxFQUFFLENBRjhDO0FBR3REQyxJQUFBQSxPQUFPLEVBQUU7QUFINkMsR0FJbEQ7QUFDSixTQUFPQyxNQUFNLENBQUNDLE9BQVAsQ0FBZU4sS0FBZixFQUFzQk8sR0FBdEIsQ0FBMEIsVUFBQ0MsS0FBRCxFQUFnQjtBQUMvQyxRQUFNQyxNQUFNLEdBQUcsSUFBSUMsVUFBSixFQUFmO0FBQ0FELElBQUFBLE1BQU0sQ0FBQ0UsYUFBUCxDQUFxQkgsS0FBSyxDQUFDLENBQUQsQ0FBMUI7QUFDQUksSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlMLEtBQUssQ0FBQyxDQUFELENBQWpCO0FBQ0EsV0FBT0MsTUFBTSxDQUFDSyxNQUFQLEdBQWdCLFVBQUNDLEtBQUQsRUFBZ0I7QUFDckMsVUFBTUMsR0FBRyxHQUFHLElBQUlDLEtBQUosRUFBWjtBQUNBRCxNQUFBQSxHQUFHLENBQUNFLEdBQUosR0FBVUgsS0FBSyxDQUFDSSxNQUFOLENBQWFDLE1BQXZCO0FBRUEsYUFBT0osR0FBRyxDQUFDRixNQUFKLEdBQWEsWUFBTTtBQUN4QixZQUFNTyxJQUFJLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixRQUF2QixDQUFiO0FBQ0EsWUFBTUMsR0FBRyxHQUE2QkgsSUFBSSxDQUFDSSxVQUFMLENBQWdCLElBQWhCLENBQXRDO0FBQ0EsWUFBTXZCLEtBQUssR0FBR0QsT0FBTyxDQUFDQyxLQUFSLElBQWlCYyxHQUFHLENBQUNVLFlBQW5DO0FBQ0EsWUFBTXZCLE1BQU0sR0FBR0YsT0FBTyxDQUFDRSxNQUFSLElBQWtCYSxHQUFHLENBQUNXLGFBQXJDO0FBRUFOLFFBQUFBLElBQUksQ0FBQ25CLEtBQUwsR0FBYUEsS0FBYjtBQUNBbUIsUUFBQUEsSUFBSSxDQUFDbEIsTUFBTCxHQUFjQSxNQUFkO0FBQ0FxQixRQUFBQSxHQUFHLENBQUNJLFNBQUosQ0FBY1osR0FBZCxFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QmQsS0FBekIsRUFBZ0NDLE1BQWhDO0FBRUEsZUFBT3FCLEdBQUcsQ0FBQ0ssTUFBSixDQUFXQyxNQUFYLENBQWtCLFVBQUNDLElBQUQsRUFBZTtBQUN0QyxjQUFNQyxJQUFJLEdBQUcsSUFBSUMsSUFBSixDQUFTLENBQUNGLElBQUQsQ0FBVCxFQUFpQnZCLEtBQUssQ0FBQyxDQUFELENBQUwsQ0FBUzBCLElBQTFCLEVBQWdDO0FBQzNDQyxZQUFBQSxJQUFJLEVBQUUzQixLQUFLLENBQUMsQ0FBRCxDQUFMLENBQVMyQixJQUQ0QjtBQUUzQ0MsWUFBQUEsWUFBWSxFQUFFQyxNQUFNLENBQUMsSUFBSUMsSUFBSixFQUFEO0FBRnVCLFdBQWhDLENBQWI7QUFLQSxpQkFBT04sSUFBUDtBQUNELFNBUE0sRUFPSnhCLEtBQUssQ0FBQyxDQUFELENBQUwsQ0FBUzJCLElBUEwsRUFPV2xDLE9BQU8sQ0FBQ0csT0FBUixJQUFtQixFQVA5QixDQUFQO0FBUUQsT0FsQkQ7QUFtQkQsS0F2QkQ7QUF3QkQsR0E1Qk0sQ0FBUDtBQTZCRCxDQWxDRCIsInNvdXJjZXNDb250ZW50IjpbImludGVyZmFjZSBvcHRpb25zIHtcbiAgd2lkdGg6IG51bWJlcixcbiAgaGVpZ2h0OiBudW1iZXIsXG4gIHF1YWxpdHk6IG51bWJlcixcbn1cblxuY29uc3QganNJbWFnZUtpdCA9IChmaWxlczogRmlsZUxpc3QsIG9wdGlvbnM6IG9wdGlvbnMgPSB7XG4gIHdpZHRoOiAwLFxuICBoZWlnaHQ6IDAsXG4gIHF1YWxpdHk6IDE1LFxufSkgPT4ge1xuICByZXR1cm4gT2JqZWN0LmVudHJpZXMoZmlsZXMpLm1hcCgoZW50cnk6IGFueSkgPT4ge1xuICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZW50cnlbMV0pO1xuICAgIGNvbnNvbGUubG9nKGVudHJ5WzFdKVxuICAgIHJldHVybiByZWFkZXIub25sb2FkID0gKGV2ZW50OiBhbnkpID0+IHtcbiAgICAgIGNvbnN0IGltZyA9IG5ldyBJbWFnZSgpO1xuICAgICAgaW1nLnNyYyA9IGV2ZW50LnRhcmdldC5yZXN1bHQ7XG5cbiAgICAgIHJldHVybiBpbWcub25sb2FkID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBlbGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XG4gICAgICAgIGNvbnN0IGN0eCA9IDxDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQ+ZWxlbS5nZXRDb250ZXh0KCcyZCcpO1xuICAgICAgICBjb25zdCB3aWR0aCA9IG9wdGlvbnMud2lkdGggfHwgaW1nLm5hdHVyYWxXaWR0aDtcbiAgICAgICAgY29uc3QgaGVpZ2h0ID0gb3B0aW9ucy5oZWlnaHQgfHwgaW1nLm5hdHVyYWxIZWlnaHQ7XG5cbiAgICAgICAgZWxlbS53aWR0aCA9IHdpZHRoO1xuICAgICAgICBlbGVtLmhlaWdodCA9IGhlaWdodDtcbiAgICAgICAgY3R4LmRyYXdJbWFnZShpbWcsIDAsIDAsIHdpZHRoLCBoZWlnaHQpO1xuXG4gICAgICAgIHJldHVybiBjdHguY2FudmFzLnRvQmxvYigoYmxvYjogYW55KSA9PiB7XG4gICAgICAgICAgY29uc3QgZmlsZSA9IG5ldyBGaWxlKFtibG9iXSwgZW50cnlbMV0ubmFtZSwge1xuICAgICAgICAgICAgdHlwZTogZW50cnlbMV0udHlwZSxcbiAgICAgICAgICAgIGxhc3RNb2RpZmllZDogTnVtYmVyKG5ldyBEYXRlKCkpLFxuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgcmV0dXJuIGZpbGU7XG4gICAgICAgIH0sIGVudHJ5WzFdLnR5cGUsIG9wdGlvbnMucXVhbGl0eSB8fCAzMClcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufTtcblxuZXhwb3J0IHsganNJbWFnZUtpdCB9O1xuIl19
